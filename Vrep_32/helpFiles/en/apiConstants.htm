<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>API Constants</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td>
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1><a href="apisOverview.htm">API</a> Constants</h1>



<h3><a name="generalObjectTypes"></a>General object types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_appobj_object_type</div>
<div>sim_appobj_collision_type</div>
<div>sim_appobj_distance_type</div>
<div>sim_appobj_simulation_type</div>
<div>sim_appobj_ik_type</div>
<div>sim_appobj_constraintsolver_type</div>
<div>sim_appobj_collection_type</div>
<div>sim_appobj_ui_type</div>
<div>sim_appobj_script_type</div>
<div>sim_appobj_pathplanning_type</div>
<div>sim_appobj_geometry_type</div>
<div>sim_appobj_texture_type</div>
<br>
See also the <a href="apiFunctions.htm#simIsHandleValid">simIsHandleValid</a> function.
</td>
</tr>
</table>
<br>




<h3><a name="sceneObjectTypes"></a>Scene object types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_object_shape_type</div>
<div>sim_object_joint_type</div>
<div>sim_object_graph_type</div>
<div>sim_object_camera_type</div>
<div>sim_object_light_type</div>
<div>sim_object_dummy_type</div>
<div>sim_object_proximitysensor_type</div>
<div>sim_object_path_type</div>
<div>sim_object_visionsensor_type</div>
<div>sim_object_mill_type</div>
<div>sim_object_forcesensor_type</div>
<div>sim_object_mirror_type</div>
<br>
See also the <a href="apiFunctions.htm#simGetObjectType">simGetObjectType</a> and <a href="apiFunctions.htm#simGetObjects">simGetObjects</a> functions. </td>
</tr>
</table>
<br>


<h3><a name="sceneObjectSubTypes"></a>Scene object sub-types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_light_omnidirectional_subtype</div>
<div>sim_light_spot_subtype</div>
<div>sim_light_directional_subtype</div>
<div>sim_joint_revolute_subtype</div>
<div>sim_joint_prismatic_subtype</div>
<div>sim_joint_spherical_subtype</div>
<div>sim_shape_simpleshape_subtype</div>
<div>sim_shape_multishape_subtype</div>
<div>sim_proximitysensor_ray_subtype</div>
<div>sim_proximitysensor_pyramid_subtype</div>
<div>sim_proximitysensor_cylinder_subtype</div>
<div>sim_proximitysensor_disc_subtype</div>
<div>sim_proximitysensor_cone_subtype</div>
<div>sim_mill_pyramid_subtype</div>
<div>sim_mill_cylinder_subtype</div>
<div>sim_mill_disc_subtype</div>
<div>sim_mill_cone_subtype</div>
</td>
</tr>
</table>
<br>



<h3><a name="sceneObjectProperties" id="sceneObjectProperties"></a>Scene object properties</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_objectproperty_collapsed</div>
<div>sim_objectproperty_selectable</div>
<div>sim_objectproperty_selectmodelbaseinstead</div>
<div>sim_objectproperty_dontshowasinsidemodel</div>
<br>
See also the <a href="apiFunctions.htm#simGetObjectProperty">simGetObjectProperty</a> and <a href="apiFunctions.htm#simSetObjectProperty">simSetObjectProperty</a> functions. </td>
</tr>
</table>
<br>




<h3><a name="sceneObjectSpecialProperties"></a>Scene object special properties (can be combined with the OR operator)</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_objectspecialproperty_collidable</div>
<div>sim_objectspecialproperty_measurable</div>
<div>sim_objectspecialproperty_respondable</div>
<div>sim_objectspecialproperty_detectable_ultrasonic</div>
<div>sim_objectspecialproperty_detectable_infrared</div>
<div>sim_objectspecialproperty_detectable_laser</div>
<div>sim_objectspecialproperty_detectable_inductive</div>
<div>sim_objectspecialproperty_detectable_capacitive</div>
<div>sim_objectspecialproperty_detectable_all</div>
<div>sim_objectspecialproperty_renderable</div>
<div>sim_objectspecialproperty_cuttable</div>
<div>sim_objectspecialproperty_pathplanning_ignored</div>
<br>
See also the <a href="apiFunctions.htm#simGetObjectSpecialProperty">simGetObjectSpecialProperty</a> and <a href="apiFunctions.htm#simSetObjectSpecialProperty">simSetObjectSpecialProperty</a> functions. </td>
</tr>
</table>
<br>




<h3><a name="modelProperties"></a>Model properties</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_modelproperty_not_collidable</div>
<div>sim_modelproperty_not_measurable</div>
<div>sim_modelproperty_not_renderable </div>
<div>sim_modelproperty_not_detectable</div>
<div>sim_modelproperty_not_cuttable</div>
<div>sim_modelproperty_not_dynamic</div>
<div>sim_modelproperty_not_respondable</div>
<div class=tab>cannot be selected if sim_modelproperty_not_dynamic is not selected</div>
<div>sim_modelproperty_not_reset</div>
<div class=tab>model is not reset at simulation end. This flag is cleared at simulation end</div>
<div>sim_modelproperty_not_visible</div>
<div class=tab>model is not visible, independently from local visibility settings</div>
<div>sim_modelproperty_not_model</div>
<div class=tab>specified object is not a model. Use with care when setting this value</div>
<br>
See also the <a href="apiFunctions.htm#simGetModelProperty">simGetModelProperty</a> and <a href="apiFunctions.htm#simSetModelProperty">simSetModelProperty</a> functions.
</td>
</tr>
</table>
<br>









<h3><a name="ikCalculationMethods"></a>IK calculation methods</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_ik_pseudo_inverse_method</div>
<div>sim_ik_damped_least_squares_method</div>
<div>sim_ik_jacobian_transpose_method</div>
<br>
See also the <a href="apiFunctions.htm#simSetIkGroupProperties">simSetIkGroupProperties</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="ikConstraints"></a>IK constraints (can be combined with the OR operator)</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_ik_x_constraint</div>
<div>sim_ik_y_constraint</div>
<div>sim_ik_z_constraint</div>
<div>sim_ik_alpha_beta_constraint</div>
<div>sim_ik_gamma_constraint</div>
<div>sim_ik_avoidance_constraint</div>
<br>
See also the <a href="apiFunctions.htm#simSetIkElementProperties">simSetIkElementProperties</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="ikCalculationResults"></a>IK calculation results</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_ikresult_not_performed</div>
<div>sim_ikresult_success</div>
<div>sim_ikresult_fail</div>
<br>
See also the <a href="apiFunctions.htm#simHandleIkGroup">simHandleIkGroup</a> function.
</td>
</tr>
</table>
<br>



<h3><a name="simulatorMessages"></a>Simulator messages</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div><strong>Following messages can be queried from Lua, by calling the <a href="apiFunctions.htm#simGetSimulatorMessage">simGetSimulatorMessage</a> function:</strong></div>
<br>
<div>sim_message_ui_button_state_change</div>
<div class=tab>auxiliaryData[0]=UI handle, auxiliaryData[1]=button handle, auxiliaryData[2]=button property, auxiliaryData[3]=slider position (if slider)</div>
<div class=tab>See also the <a href="apiFunctions.htm#simGetUIEventButton">simGetUIEventButton</a></div>
<div>sim_message_model_loaded</div>
<div>sim_message_scene_loaded</div>
<div>sim_message_keypress</div>
<div class=tab>auxiliaryData[0]=key, auxiliaryData[1]=ctrl and shift key state</div>
<div>sim_message_bannerclicked</div>
<div class=tab>auxiliaryData[0]=banner ID</div>
<br>
<br>

<div><strong>Following messages can be queried from C/C++, by calling the <a href="apiFunctions.htm#simGetSimulatorMessage">simGetSimulatorMessage</a> function:</strong></div>
<br>
<div>sim_message_simulation_start_resume_request</div>
<div class=tab>The user wishes to start/resume a simulation. See also the <a href="apiFunctions.htm#simStartSimulation">simStartSimulation</a> function</div>
<div>sim_message_simulation_pause_request</div>
<div class=tab>The user wishes to pause a simulation. See also the <a href="apiFunctions.htm#simPauseSimulation">simPauseSimulation</a> function</div>
<div>sim_message_simulation_stop_request</div>
<div class=tab>The user wishes to stop a simulation. See also the <a href="apiFunctions.htm#simStopSimulation">simStopSimulation</a> function</div>
<br>
<br>


<div><strong>Following messages are dispatched to the <a href="plugins.htm">plugins</a> (refer to the plugin <a href="plugins.htm">v_repMessage entry point</a>):</strong></div>
<br>
<div>sim_message_eventcallback_instancepass</div>
<div class=tab>Called once every main client application loop pass. auxiliaryData[0] contains event flags of events that happened since last time. If you react to some of below event flags, make sure you do not react to their equivalent event callback message (e.g. sim_message_eventcallback_sceneloaded is similar to below's bit3 set)</div>
<div class=tab>bit0 set: object(s) erased</div>
<div class=tab>bit1 set: object(s) created</div>
<div class=tab>bit2 set: model loaded</div>
<div class=tab>bit3 set: scene loaded</div>
<div class=tab>bit4 set: undo called</div>
<div class=tab>bit5 set: redo called</div>
<div class=tab>bit6 set: scene switched (react to this message in a similar way as you would react to a full scene content change)</div>
<div class=tab>bit7 set: edit mode active. This is not an event flag, but a state flag</div>
<div class=tab>bit8 set: object(s) scaled</div>
<div class=tab>bit9 set: selection state changed. (different objects are selected now)</div>
<div class=tab>bit10 set: key pressed</div>
<div class=tab>bit11 set: simulation started</div>
<div class=tab>bit12 set: simulation ended</div>
<div>sim_message_eventcallback_instanceswitch</div>
<div class=tab>scene was switched (react to this message in a similar way as you would react to a full scene content change)</div>
<div class=tab>auxiliaryData[0]=scene index</div>
<div>sim_message_eventcallback_menuitemselected</div>
<div class=tab>auxiliaryData[0]=handle of the item</div>
<div class=tab>auxiliaryData[1]=state of the item</div>
<div>sim_message_eventcallback_broadcast</div>
<div class=tab>auxiliaryData[0]=header (see <a href="apiFunctions.htm#simAddSceneCustomData">simAddSceneCustomData</a> for an explanation)</div>
<div class=tab>auxiliaryData[1]=message ID</div>
<div>sim_message_eventcallback_scenesave</div>
<div class=tab>about to save a scene</div>
<div>sim_message_eventcallback_modelsave</div>
<div class=tab>about to save a model (current selection will be saved)</div>
<div>sim_message_eventcallback_moduleopen</div>
<div class=tab>called when simOpenModule in Lua is called</div>
<div class=tab>customData=name of the plugin to execute the command, or NULL if all should execute the command</div>
<div>sim_message_eventcallback_modulehandle</div>
<div class=tab>called when simHandleModule in Lua is called with second argument false</div>
<div class=tab>customData=name of the plugin to execute the command, or NULL if all should execute the command</div>
<div>sim_message_eventcallback_modulehandleinsensingpart</div>
<div class=tab>called when simHandleModule in Lua is called with second arg. true</div>
<div class=tab>customData=name of the plugin to execute the command, or NULL if all should execute the command</div>
<div>sim_message_eventcallback_moduleclose</div>
<div class=tab>called when simCloseModule in Lua is called</div>
<div class=tab>customData=name of the plugin to execute the command, or NULL if all should execute the command</div>
<div>sim_message_eventcallback_renderingpass</div>
<div class=tab>called just before the scene is rendered</div>
<div>sim_message_eventcallback_broadcast</div>
<div class=tab>called when simBroadcastMessage is called</div>
<div>sim_message_eventcallback_imagefilter_enumreset</div>
<div class=tab>"reset enumeration" message for filter plugins</div>
<div>sim_message_eventcallback_imagefilter_enumerate</div>
<div class=tab>"enumerate" message for filter plugins</div>
<div class=tab>replyData[0]=header ID</div>
<div class=tab>replyData[1]=filterID. A positive ID (including 0) represents a filter whose parameters can be edited. A filter with a negative ID cannot be edited.</div>
<div class=tab>Return the filter's name as the callback return value (allocate the buffer with the simCreateBuffer function)</div>
<div>sim_message_eventcallback_imagefilter_adjustparams</div>
<div class=tab>"edit filter parameters" message for filter plugins</div>
<div class=tab>auxiliaryData[0]=header ID</div>
<div class=tab>auxiliaryData[1]=filter ID</div>
<div class=tab>auxiliaryData[2]=size in bytes of the filter parameter buffer to be edited</div>
<div class=tab>customData=filter parameter buffer. Can be NULL (is NULL when filter parameters were never edited)</div>
<div class=tab>replyData[0]=size in bytes of the edited filter parameter buffer returned as the callback return buffer. That buffer has to be allocated with the simCreateBuffer command and is automatically released by V-REP upon callback return.</div>
<div>sim_message_eventcallback_imagefilter_process</div>
<div class=tab>"do image processing" message for filter plugins</div>
<div class=tab>auxiliaryData[0]=header ID</div>
<div class=tab>auxiliaryData[1]=filter ID</div>
<div class=tab>auxiliaryData[2]=resolution X</div>
<div class=tab>auxiliaryData[3]=resolution Y</div>
<div class=tab>customData[0]=input image (size: x*y*3 floats)</div>
<div class=tab>customData[1]=input depth image (size: x*y floats)</div>
<div class=tab>customData[2]=work image (size: x*y*3 floats)</div>
<div class=tab>customData[3]=buffer image 1 (size: x*y*3 floats)</div>
<div class=tab>customData[4]=buffer image 2 (size: x*y*3 floats)</div>
<div class=tab>customData[5]=output image (size: x*y*3 floats)</div>
<div class=tab>customData[6]=filter parameter buffer (size: custom), can be NULL (is NULL when filter parameters were never edited)</div>
<div class=tab>replyData[0]=1 if the sensor should trigger a detection, 0 otherwise</div>
<div class=tab>replyData[1]=number of float values returned, representing auxiliary information (that can be retrieved with simHandleVisionSensor). The auxiliary information can represent a vector, a direction, any result from an image processing algorithm. Allocate the return float buffer with simCreateBuffer</div>

<div>sim_message_eventcallback_abouttoundo</div>
<div class=tab>the undo button was hit and a previous state is about to be restored</div>
<div>sim_message_eventcallback_undoperformed</div>
<div class=tab>the undo button was hit and a previous state was restored</div>
<div>sim_message_eventcallback_abouttoredo</div>
<div class=tab>the redo button was hit and a future state is about to be restored</div>
<div>sim_message_eventcallback_redoperformed</div>
<div class=tab>the redo button was hit and a future state was restored</div>
<div>sim_message_eventcallback_scripticondblclick</div>
<div class=tab>a script icon in the hierarchy view was double-clicked</div>
<div class=tab>auxiliaryData[0]=object handle of the object associated with the child script</div>
<div class=tab>replyData[0]: set to 1 if you do not want the double-click action to open the script editor</div>
<div>sim_message_eventcallback_simulationabouttostart</div>
<div class=tab>simulation will start</div>
<div>sim_message_eventcallback_simulationended</div>
<div class=tab>simulation will end</div>
<div>sim_message_eventcallback_keypress</div>
<div class=tab>auxiliaryData[0]=key, auxiliaryData[1]=ctrl and shift key state</div>
<div>sim_message_eventcallback_bannerclicked</div>
<div class=tab>called when a banner was clicked (auxiliaryData[0]=banner ID)</div>
<div>sim_message_eventcallback_renderingpass</div>
<div class=tab>called just before the scene is rendered</div>
<div>sim_message_eventcallback_refreshdialogs</div>
<div class=tab>called just before disloags are refreshed in V-REP.</div>
<div class=tab>auxiliaryData[0]=refresh degree (0=light, 1=medium, 2=full)</div>
<div>sim_message_eventcallback_sceneloaded</div>
<div class=tab>called after a scene was loaded</div>
<div>sim_message_eventcallback_modelloaded</div>
<div class=tab>called after a model was loaded</div>
<div>sim_message_eventcallback_guipass</div>
<div class=tab>Called on a regular basis from the GUI thread.</div>
<div>sim_message_eventcallback_mainscriptabouttobecalled</div>
<div class=tab>Called just before the main script is called. If a plugin intercepts this message and writes a value different from -1 into replyData[0], the main script will not be called.</div>
<div>sim_message_eventcallback_rmlposition</div>
<div class=tab>the command simRMLPosition was called. The appropriate plugin should handle the call</div>
<div>sim_message_eventcallback_rmlvelocity</div>
<div class=tab>the command simRMLVelocity was called. The appropriate plugin should handle the call</div>
<div>sim_message_eventcallback_meshcalculationplugin</div>
<div class=tab>a mesh calculation function was called. The appropriate plugin (i.e. 'MeshCalc') should handle the call</div>
<div>sim_message_eventcallback_dynamicsplugin</div>
<div class=tab>a dynamics function was called. The appropriate plugin (i.e. 'Dynamics') should handle the call</div>
<div>sim_message_eventcallback_pathplanningplugin</div>
<div class=tab>a path planning function was called. The appropriate plugin (i.e. 'PathPlanning') should handle the call</div>
<div>sim_message_eventcallback_colladaplugin</div>
<div class=tab>a collada plugin function was called. The appropriate plugin (i.e. 'Collada') should handle the call</div>
</td>
</tr>
</table>
<br>


<h3><a name="customLuaCommandArgumentTypes"></a>Types of argument (input and output) for custom lua commands</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_lua_arg_nil</div>
<div class=tab>can be combined with sim_lua_arg_table</div>
<div>sim_lua_arg_bool</div>
<div class=tab>can be combined with sim_lua_arg_table</div>
<div>sim_lua_arg_int</div>
<div class=tab>can be combined with sim_lua_arg_table</div>
<div>sim_lua_arg_float</div>
<div class=tab>can be combined with sim_lua_arg_table</div>
<div>sim_lua_arg_string</div>
<div class=tab>can be combined with sim_lua_arg_table</div>
<div>sim_lua_arg_invalid</div>
<div>sim_lua_arg_table</div>
<br>
See also the <a href="apiFunctions.htm#simRegisterCustomLuaFunction">simRegisterCustomLuaFunction</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="uiMenuAttributes"></a>Custom user interface menu attributes (can be combined with the OR operator)</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_ui_menu_title</div>
<div>sim_ui_menu_minimize</div>
<div>sim_ui_menu_close</div>
<div>sim_ui_menu_systemblock</div>
<div class=tab>System blocks will not be removed when the scene content is removed. This item cannot be used when the call originates from a script.</div>
<br>
See also the <a href="apiFunctions.htm#simCreateUI">simCreateUI</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="uiProperties"></a>Custom user interface properties (can be combined with the OR operator)</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_ui_property_visible</div>
<div>sim_ui_property_visibleduringsimulationonly</div>
<div>sim_ui_property_moveable</div>
<div>sim_ui_property_relativetoleftborder</div>
<div>sim_ui_property_relativetotopborder</div>
<div>sim_ui_property_fixedwidthfont</div>
<div>sim_ui_property_systemblock</div>
<div class=tab>System blocks will not be removed when the scene content is removed. This item cannot be written. See also <a href="#uiMenuAttributes">sim_ui_menu_systemblock</a>.</div>
<div>sim_ui_property_settocenter</div>
<div>sim_ui_property_rolledup</div>
<div>sim_ui_property_selectassociatedobject</div>
<div>sim_ui_property_visiblewhenobjectselected</div>
<div>sim_ui_property_systemblockcanmovetofront</div>
<div>sim_ui_property_pauseactive</div>
<br>
See also the <a href="apiFunctions.htm#simGetUIProperty">simGetUIProperty</a> and <a href="apiFunctions.htm#simSetUIProperty">simSetUIProperty</a> functions.
</td>
</tr>
</table>
<br>


<h3><a name="uiButtonProperties"></a>Custom user interface button properties (can be combined with the OR operator, except for the 4 first values wich are mutually exclusive)</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_buttonproperty_button</div>
<div>sim_buttonproperty_label</div>
<div>sim_buttonproperty_slider</div>
<div>sim_buttonproperty_editbox</div>
<div>sim_buttonproperty_staydown</div>
<div>sim_buttonproperty_enabled</div>
<div>sim_buttonproperty_borderless</div>
<div>sim_buttonproperty_verticallycentered</div>
<div>sim_buttonproperty_horizontallycentered</div>
<div>sim_buttonproperty_ignoremouse</div>
<div>sim_buttonproperty_isdown</div>
<div>sim_buttonproperty_transparent</div>
<div>sim_buttonproperty_nobackgroundcolor</div>
<div>sim_buttonproperty_rollupaction</div>
<div>sim_buttonproperty_closeaction</div>
<div>sim_buttonproperty_downupevent</div>
<br>
See also the <a href="apiFunctions.htm#simGetUIButtonProperty">simGetUIButtonProperty</a>, <a href="apiFunctions.htm#simSetUIButtonProperty">simSetUIButtonProperty</a> and <a href="apiFunctions.htm#simCreateUIButton">simCreateUIButton</a> functions.
</td>
</tr>
</table>
<br>


<h3><a name="simulationStatus"></a>Simulation status</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_simulation_stopped</div>
<div>sim_simulation_paused</div>
<div>sim_simulation_advancing_firstafterstop</div>
<div>sim_simulation_advancing_running</div>
<div>sim_simulation_advancing_lastbeforepause</div>
<div>sim_simulation_advancing_firstafterpause</div>
<div>sim_simulation_advancing_abouttostop</div>
<div>sim_simulation_advancing_lastbeforestop</div>
<br>
See also the <a href="apiFunctions.htm#simGetSimulationState">simGetSimulationState</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="mainScriptExecutionResults"></a>Main script execution result (might change in the future)</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_script_no_error</div>
<div>sim_script_main_script_nonexistent</div>
<div>sim_script_main_script_not_called</div>
<div>sim_script_reentrance_error</div>
<div>sim_script_lua_error</div>
<div>sim_script_call_error</div>
<br>
See also the <a href="apiFunctions.htm#simHandleMainScript">simHandleMainScript</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="scriptTypes"></a>Script types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_scripttype_mainscript</div>
<div>sim_scripttype_childscript</div>
<div class=tab>can be combined with sim_scripttype_threaded</div>
<div>sim_scripttype_pluginscript</div>
<div>sim_scripttype_threaded</div>
<div class=tab>can only be used if combined with sim_scripttype_childscript</div>
<br>
See also the <a href="apiFunctions.htm#simGetScriptProperty">simGetScriptProperty</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="errorReportModes"></a>API error message report modes</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_api_errormessage_ignore</div>
<div class=tab>does not memorize nor output errors</div>
<div>sim_api_errormessage_report</div>
<div class=tab>memorizes errors (default for C-API calls)</div>
<div>sim_api_errormessage_output</div>
<div class=tab>memorizes and outputs errors (default for Lua-API calls)</div>
<br>
See also the <a href="apiConstants.htm#integerParameters">sim_intparam_error_report_mode</a> constant,  the <a href="apiFunctions.htm#simGetIntegerParameter">simGetIntegerParameter</a>,  <a href="apiFunctions.htm#simSetIntegerParameter">simSetIntegerParameter</a> and <a href="apiFunctions.htm#simGetLastError">simGetLastError</a> functions. </td>
</tr>
</table>
<br>


<h3><a name="specialArgumentValues"></a>Special argument values</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_handle_all</div>
<div>sim_handle_all_except_explicit</div>
<div>sim_handle_self</div>
<div>sim_handle_main_script</div>
<div>sim_handle_tree</div>
<div>sim_handle_chain</div>
<div>sim_handle_single</div>
<div>sim_handle_default</div>
<div>sim_handle_all_except_self</div>
<div>sim_handle_parent</div>
</td>
</tr>
</table>
<br>


<h3><a name="genericDialogStyles"></a>Generic dialog styles</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_dlgstyle_message</div>
<div>sim_dlgstyle_input</div>
<div>sim_dlgstyle_ok</div>
<div>sim_dlgstyle_ok_cancel</div>
<div>sim_dlgstyle_yes_no</div>
<div>sim_dlgstyle_dont_center (can be OR-combined with one of above values)</div>
<br>
See also the <a href="apiFunctions.htm#simDisplayDialog">simDisplayDialog</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="genericDialogReturnValues"></a>Generic dialog return values</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_dlgret_still_open</div>
<div>sim_dlgret_ok</div>
<div>sim_dlgret_cancel</div>
<div>sim_dlgret_yes</div>
<div>sim_dlgret_no</div>
<br>
See also the <a href="apiFunctions.htm#simGetDialogResult">simGetDialogResult</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="pathObjectProperties"></a>Path object properties (can be combined with the OR operator)</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_pathproperty_show_line</div>
<div>sim_pathproperty_show_orientation</div>
<div>sim_pathproperty_closed_path</div>
<div>sim_pathproperty_automatic_orientation</div>
<div>sim_pathproperty_invert_velocity</div>
<div>sim_pathproperty_infinite_acceleration</div>
<div>sim_pathproperty_flat_path</div>
<div>sim_pathproperty_show_position</div>
<div>sim_pathproperty_auto_velocity_profile_translation</div>
<div>sim_pathproperty_auto_velocity_profile_rotation</div>
<div>sim_pathproperty_endpoints_at_zero</div>
<div>sim_pathproperty_keep_x_up</div>
</td>
</tr>
</table>
<br>


<h3><a name="customDrawingObjects"></a>Custom drawing objects</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>Drawing object type (combine with drawing object attributes):</div>
<br>
<div>sim_drawing_points</div>
<div class=tab>items are pixel-sized points (3 values per item (x;y;z) + auxiliary values)</div>
<div>sim_drawing_lines</div>
<div class=tab>items are pixel-sized lines (6 values per item (x0;y0;z0;x1;y1;z1) + auxiliary values)</div>
<div>sim_drawing_triangles</div>
<div class=tab>items are triangles (9 values per item (x0;y0;z0;x1;y1;z1;x2;y2;z2) + auxiliary values)</div>
<div>sim_drawing_trianglepoints</div>
<div class=tab>items are "triangle points" (6 values per item (x;y;z;Nx;Ny;Nz) (N=normal vector)) + auxiliary values)</div>
<div>sim_drawing_quadpoints</div>
<div class=tab>items are "rectangle points" (6 values per item (x;y;z;Nx;Ny;Nz) (N=normal vector)) + auxiliary values)</div>
<div>sim_drawing_discpoints</div>
<div class=tab>items are "disc points" (6 values per item (x;y;z;Nx;Ny;Nz) (N=normal vector)) + auxiliary values)</div>
<div>sim_drawing_cubepoints</div>
<div class=tab>items are "cube points" (6 values per item (x;y;z;Nx;Ny;Nz) (N=normal vector)) + auxiliary values)</div>
<div>sim_drawing_spherepoints</div>
<div class=tab>items are "sphere points" (3 values per item (x;y;z) + auxiliary values)</div>
<br>
<div>Drawing object attributes:</div>
<br>
<div>sim_drawing_itemcolors</div>
<div class=tab>each item has individual ambient colors (+3 auxiliary values (red, green and blue)). Mutually exclusive with sim_drawing_vertexcolors</div>
<div>sim_drawing_vertexcolors</div>
<div class=tab>each item vertex has individual colors (+3 auxiliary values per vertex). Only for sim_drawing_lines or sim_drawing_triangles. Mutually exclusive with sim_drawing_itemcolors</div>
<div>sim_drawing_itemsizes</div>
<div class=tab>each item has individual sizes (+1 auxiliary value). Not for sim_drawing_triangles</div>
<div>sim_drawing_backfaceculling</div>
<div class=tab>items are back-face culled</div>
<div>sim_drawing_wireframe</div>
<div class=tab>items are displayed in wire frame</div>
<div>sim_drawing_painttag</div>
<div class=tab>items have a "paint"-tag, which means that items are renderable. If the items are attached to scene objects, then the scene object's renderable tag needs to be set too</div>
<div>sim_drawing_followparentvisibility</div>
<div class=tab>items attached to a scene object follow its visibility property</div>
<div>sim_drawing_cyclic</div>
<div class=tab>if the drawing object is full, then the first items are overwritten</div>
<div>sim_drawing_50percenttransparency</div>
<div class=tab>the drawing object will be 50 transparent</div>
<div>sim_drawing_25percenttransparency</div>
<div class=tab>the drawing object will be 25 transparent</div>
<div>sim_drawing_12percenttransparency</div>
<div class=tab>the drawing object will be 12.5 transparent</div>
<div>sim_drawing_emissioncolor</div>
<div class=tab>when used in combination with sim_drawing_itemcolors or sim_drawing_vertexcolors, then the specified colors will be for the emissive component</div>
<div>sim_drawing_facingcamera</div>
<div class=tab>if specified, then sim_drawing_trianglepoints, sim_drawing_quadpoints, sim_drawing_discpoints and sim_drawing_cubepoints will be drawn to always face the cameras. In that case, the normal vector is not required anymore and should not be specified anymore (3 values instead of 6 values)</div>
<div>sim_drawing_overlay</div>
<div class=tab>if specified, then items are drawn on top of other objects and are (almost) always visible</div>
<div>sim_drawing_itemtransparency</div>
<div class=tab>each item has individual transparency values (+1 auxiliary value per item). Not compatible with sim_drawing_vertexcolors</div>
<br>
See also the <a href="apiFunctions.htm#simAddDrawingObject">simAddDrawingObject</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="banners"></a>Banners</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_banner_left</div>
<div class=tab>banners display on the left of the specified point</div>
<div>sim_banner_right</div>
<div class=tab>banners display on the right of the specified point</div>
<div>sim_banner_nobackground</div>
<div class=tab>banners have no background rectangle</div>
<div>sim_banner_overlay</div>
<div class=tab>when specified, banners are always drawn on top of "regular objects"</div>
<div>sim_banner_followparentvisibility</div>
<div class=tab>if the object is associated with a scene object, then it follows that visibility, otherwise it is alwaysvisible</div>
<div>sim_banner_clickselectsparent</div>
<div class=tab>if the object is associated with a scene object, then clicking the banner will select the scene object</div>
<div>sim_banner_clicktriggersevent</div>
<div class=tab>if the banner is clicked, an event is triggered (sim_message_eventcallback_bannerclicked and sim_message_bannerclicked are generated)</div>
<div>sim_banner_facingcamera</div>
<div class=tab>if specified, the banner will always face the camera by rotating it around its vertical axis (y-axis)</div>
<div>sim_banner_fullyfacingcamera</div>
<div class=tab>if specified, the banner will always fully face the camera (the banner's orientation is same as the camera looking at it)</div>
<div>sim_banner_backfaceculling</div>
<div class=tab>if specified, the banner will only be visible from one side</div>
<div>sim_banner_keepsamesize</div>
<div class=tab>if specified, the banner will always appear in the same size. In that case size represents the banner height in pixels</div>
<div>sim_banner_bitmapfont</div>
<div class=tab>if specified, a fixed-size bitmap font is used. The text will also always fully face the camera and be right to the specified position. Bitmap fonts are not clickable.</div>
<br>
See also the <a href="apiFunctions.htm#simAddBanner">simAddBanner</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="particleObjects"></a>Particle objects</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>Particle object type (combine with particle object attributes). Each item (particle) requires 6 values + auxiliary values, where the 6 values are: pt1x, pt1y, pt1z, pt2x, pt2y, pt2z (Pt1 is start position, pt2-pt1 is the initial velocity vector)</div>
<br>
<div>sim_particle_points1</div>
<div class=tab>items are displayed as 1 pixel-sized points (internally handled as a perfect sphere)</div>
<div>sim_particle_points2</div>
<div class=tab>items are displayed as 2 pixel-sized points (internally handled as a perfect sphere)</div>
<div>sim_particle_points4</div>
<div class=tab>items are displayed as 4 pixel-sized points (internally handled as a perfect sphere)</div>
<div>sim_particle_roughspheres</div>
<div class=tab>items are displayed as rough spheres (internally handled as a perfect sphere)</div>
<div>sim_particle_spheres</div>
<div class=tab>items are displayed as spheres</div>
<br>
<div>Particle object attributes:</div>
<br>
<div>sim_particle_respondable1to4</div>
<div class=tab>the particles are respondable against shapes that have at least one bit 1-4 activated in the global respondable mask</div>
<div>sim_particle_respondable5to8</div>
<div class=tab>the particles are respondable against shapes that have at least one bit 5-8 activated in the global respondable mask</div>
<div>sim_particle_particlerespondable</div>
<div class=tab>the particles are respondable against each other</div>
<div>sim_particle_ignoresgravity</div>
<div class=tab>the particles ignore the effect of gravity</div>
<div>sim_particle_invisible</div>
<div class=tab>the particles are invisible</div>
<div>sim_particle_painttag</div>
<div class=tab>the particles are visible when seen from vision sensors. sim_particle_invisible must not be set</div>
<div>sim_particle_cyclic</div>
<div class=tab>if the max particle count was reached, then the first particles are overwritten</div>
<div>sim_particle_itemsizes</div>
<div class=tab>+1 auxiliary value per particle (each particle can have a different size)</div>
<div>sim_particle_itemdensities</div>
<div class=tab>+1 auxiliary value per particle (each particle can have a different density)</div>
<div>sim_particle_itemcolors</div>
<div class=tab>+3 auxiliary values per particle (each particle can have a different ambient color)</div>
<div>sim_particle_emissioncolor</div>
<div class=tab>when used in combination with sim_particle_itemcolors, then the specified colors will be for the emissive component</div>
<div>sim_particle_water</div>
<div class=tab>particles are water particles (no weight in the water (i.e. when z&lt;0)). In addition to that, particles can have drag coefficients for the water and the air. Not compatible with sim_particle_ignoresgravity</div>
<br>
See also the <a href="apiFunctions.htm#simAddParticleObject">simAddParticleObject</a> function.
</td>
</tr>
</table>
<br>




<h3><a name="booleanParameters"></a>Boolean parameters</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_boolparam_hierarchy_visible</div>
<div>sim_boolparam_console_visible</div>
<div>sim_boolparam_collision_handling_enabled</div>
<div>sim_boolparam_distance_handling_enabled</div>
<div>sim_boolparam_ik_handling_enabled</div>
<div>sim_boolparam_gcs_handling_enabled</div>
<div>sim_boolparam_dynamics_handling_enabled</div>
<div>sim_boolparam_joint_motion_handling_enabled</div>
<div>sim_boolparam_path_motion_handling_enabled</div>
<div>sim_boolparam_proximity_sensor_handling_enabled</div>
<div>sim_boolparam_vision_sensor_handling_enabled</div>
<div>sim_boolparam_mill_handling_enabled</div>
<div>sim_boolparam_browser_visible</div>
<div>sim_boolparam_scene_and_model_load_messages</div>
<div class=tab>displays warning/error messages when loading a scene/model/UI from the API</div>
<div>sim_boolparam_shape_textures_are_visible</div>
<div>sim_boolparam_display_enabled</div>
<div class=tab>setting this to false allows you to enter the fast simulation mode. This value can be set back to true at any time by the system</div>
<div>sim_boolparam_infotext_visible</div>
<div>sim_boolparam_statustext_open</div>
<div>sim_boolparam_fog_enabled</div>
<div>sim_boolparam_mirrors_enabled</div>
<div>sim_boolparam_aux_clip_planes_enabled</div>
<div>sim_boolparam_full_model_copy_from_api</div>
<div class=tab>setting this to false allows you to copy-paste objects marked as 'model' without all related model objects when calling <a href="apiFunctions.htm#simCopyPasteSelectedObjects">simCopyPasteSelectedObjects</a>. Make sure to reset to true once finished.</div>
<br>
See also the <a href="apiFunctions.htm#simGetBooleanParameter">simGetBooleanParameter</a> and <a href="apiFunctions.htm#simSetBooleanParameter">simSetBooleanParameter</a> functions.
</td>
</tr>
</table>
<br>


<h3><a name="integerParameters"></a>Integer parameters</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_intparam_error_report_mode</div>
<div class=tab>An <a href="#errorReportModes">error report mode</a>. See also <a href="apiFunctions.htm#simGetLastError">simGetLastError</a>.</div>
<div>sim_intparam_program_version</div>
<div class=tab>e.g Version 2.1.4 --> 20104. Can only be read</div>
<div>sim_intparam_custom_cmd_start_id</div>
<div class=tab>start of custom command IDs. Can only be read</div>
<div>sim_intparam_compilation_version</div>
<div class=tab>0=evaluation version, 1=full version, 2=player version. Can only be read</div>
<div>sim_intparam_current_page</div>
<div>sim_intparam_flymode_camera_handle</div>
<div class=tab>Can only be read</div>
<div>sim_intparam_dynamic_step_divider</div>
<div class=tab>Represents the number of calculation passes of the dynamics module for each simulation pass. This might be not constant during a simulation. Can be 0 when <a href="apiFunctions.htm#simHandleDynamics">simHandleDynamics</a> wasn't yet called. Can only be read</div>
<div>sim_intparam_dynamic_engine</div>
<div class=tab>0=Bullet, 1=ODE. Can only be read</div>
<div>sim_intparam_server_port_start</div>
<div class=tab>together with sim_intparam_server_port_next and sim_intparam_server_port_range, indicates which local ports can be used. Can only be read</div>
<div>sim_intparam_server_port_range</div>
<div class=tab>together with sim_intparam_server_port_next and sim_intparam_server_port_start, indicates which local ports can be used. Can only be read</div>
<div>sim_intparam_server_port_next</div>
<div class=tab>Indicates which local ports can be used next. Once that port was used, update this value according to the values stored in sim_intparam_server_port_start and sim_intparam_server_port_range</div>
<div>sim_intparam_visible_layers</div>
<div>sim_intparam_infotext_style</div>
<div class=tab>allowed values are 0-2</div>
<div>sim_intparam_settings</div>
<div class=tab>Use with care, and always reset to initial values at simulation end</div>
<div class=tab>bit1: edge antialiasing</div>
<div class=tab>bit2: world reference display</div>
<div class=tab>bit3: bounding box display</div>
<div class=tab>bit4: don't use Frame Buffer Objects for vision sensors</div>
<div class=tab>bit5: undo/redo enabled</div>
<div>sim_intparam_edit_mode_type</div>
<div class=tab>Can only be read:</div>
<div class=tab>0: no edit mode</div>
<div class=tab>1: triangle edit mode</div>
<div class=tab>2: vertex edit mode</div>
<div class=tab>3: edge edit mode</div>
<div class=tab>4: path edit mode</div>
<div class=tab>5: button edit mode</div>
<div>sim_intparam_qt_version</div>
<div class=tab>The Qt version. Can only be read</div>
<div>sim_intparam_event_flags_read</div>
<div class=tab>Some event flags. Can only be read:</div>
<div class=tab>bit0 set: object(s) erased</div>
<div class=tab>bit1 set: object(s) created</div>
<div class=tab>bit2 set: model loaded</div>
<div class=tab>bit3 set: scene loaded</div>
<div class=tab>bit4 set: undo called</div>
<div class=tab>bit5 set: redo called</div>
<div class=tab>bit6 set: scene switched (react to this message in a similar way as you would react to a full scene content change)</div>
<div class=tab>bit7 set: edit mode active. This is not an event flag, but a state flag</div>
<div class=tab>bit8 set: object(s) scaled</div>
<div class=tab>bit9 set: selection state changed. (different objects are selected now)</div>
<div class=tab>bit10 set: key pressed</div>
<div class=tab>bit11 set: simulation started</div>
<div class=tab>bit12 set: simulation ended</div>
<div>sim_intparam_event_flags_read_clear</div>
<div class=tab>Some event flags. Reads the flags and clears them right after</div>
<div>sim_intparam_platform</div>
<div class=tab>0=Windows, 1=Macintosh, 2=Linux. Can only be read</div>
<div>sim_intparam_scene_unique_id</div>
<div class=tab>A unique ID for the current scene. Useful to identify scene switches. Can only be read</div>
<br>
See also the <a href="apiFunctions.htm#simGetIntegerParameter">simGetIntegerParameter</a> and <a href="apiFunctions.htm#simSetIntegerParameter">simSetIntegerParameter</a> functions.
</td>
</tr>
</table>
<br>

<h3><a name="floatingParameters"></a>Floating point parameters</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_floatparam_rand</div>
<div class=tab>Returns a random value in the range [0.0;1.0]. Useful when called from Lua since each script instance will initialize its random number generator in a same way, and thus, 'random' values generated in different scripts will be relatively 'similar'. This is not the case with this random value. Can only be read</div>
<br>
See also the <a href="apiFunctions.htm#simGetFloatingParameter">simGetFloatingParameter</a> and <a href="apiFunctions.htm#simSetFloatingParameter">simSetFloatingParameter</a> functions.

</td>
</tr>
</table>
<br>


<h3><a name="stringParameters"></a>String parameters</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_stringparam_application_path</div>
<br>
See also the <a href="apiFunctions.htm#simGetStringParameter">simGetStringParameter</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="arrayParameters"></a>Array parameters</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_arrayparam_gravity</div>
<div class=tab>3 floats</div>
<div>sim_arrayparam_fog</div>
<div class=tab>3 floats: fog start, fog end, fog density</div>
<div>sim_arrayparam_fog_color</div>
<div class=tab>3 floats</div>
<div>sim_arrayparam_background_color1</div>
<div class=tab>3 floats</div>
<div>sim_arrayparam_background_color2</div>
<div class=tab>3 floats</div>
<div>sim_arrayparam_ambient_light</div>
<div class=tab>3 floats</div>
<br>
See also the <a href="apiFunctions.htm#simGetArrayParameter">simGetArrayParameter</a> and <a href="apiFunctions.htm#simSetArrayParameter">simSetArrayParameter</a> functions.
</td>
</tr>
</table>
<br>


<h3><a name="navigationModes"></a>Mouse navigation and selection modes</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_navigation_passive</div>
<div>sim_navigation_camerashift</div>
<div>sim_navigation_camerarotate</div>
<div>sim_navigation_camerazoom</div>
<div>sim_navigation_cameratilt</div>
<div>sim_navigation_cameraangle</div>
<div>sim_navigation_camerafly</div>
<div>sim_navigation_objectshift</div>
<div>sim_navigation_objectrotate</div>
<div>sim_navigation_jointpathtest</div>
<div>sim_navigation_ikmanip</div>
<div>sim_navigation_objectmultipleselection</div>
<br>
<div>Bit-combine following values and add them to one of above's values for a valid navigation mode: </div>
<br>
<div>sim_navigation_clickselection</div>
<div>sim_navigation_ctrlselection</div>
<div>sim_navigation_shiftselection</div>
<div>sim_navigation_camerazoomwheel</div>
<div>sim_navigation_camerarotaterightbutton</div>
<br>
See also the <a href="apiFunctions.htm#simGetNavigationMode">simGetNavigationMode</a> and <a href="apiFunctions.htm#simSetNavigationMode">simSetNavigationMode</a> functions.
</td>
</tr>
</table>
<br>


<h3><a name="startupOptions"></a>Start-up options</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_gui_menubar</div>
<div>sim_gui_popups</div>
<div>sim_gui_toolbar1</div>
<div>sim_gui_toolbar2</div>
<div>sim_gui_hierarchy</div>
<div>sim_gui_infobar</div>
<div>sim_gui_statusbar</div>
<div>sim_gui_scripteditor</div>
<div>sim_gui_scriptsimulationparameters</div>
<div>sim_gui_dialogs</div>
<div>sim_gui_browser</div>
<div>sim_gui_all</div>
<br>
See also the <a href="apiFunctions.htm#simRunSimulator">simRunSimulator</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="jointModes"></a>Joint modes</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_jointmode_passive</div>
<div>sim_jointmode_motion</div>
<div>sim_jointmode_ik</div>
<div>sim_jointmode_ikdependent</div>
<div>sim_jointmode_dependent</div>
<div>sim_jointmode_force</div>
<br>
See also the <a href="apiFunctions.htm#simSetJointMode">simSetJointMode</a> function.
</td>
</tr>
</table>
<br>


<h3><a name="distanceCalculationMethods"></a>Distance calculation methods</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_distcalcmethod_dl</div>
<div class=tab>distance=sum(dl)</div>
<div>sim_distcalcmethod_dac</div>
<div class=tab>distance=sum(da*c)</div>
<div>sim_distcalcmethod_max_dl_dac</div>
<div class=tab>distance=sum(max(dl,da*c))</div>
<div>sim_distcalcmethod_dl_and_dac</div>
<div class=tab>distance=sum(dl+da*c)</div>
<div>sim_distcalcmethod_sqrt_dl2_and_dac2</div>
<div class=tab>distance=sum(sqrt(dl^2+(da*c)^2))</div>
<div>sim_distcalcmethod_dl_if_nonzero</div>
<div class=tab>distance=sum(if (dl!=0) then (dl) else (da*c))</div>
<div>sim_distcalcmethod_dac_if_nonzero</div>
<div class=tab>distance=sum(if (da*c!=0) then (da*c) else (dl))</div>
<br>
<div>where dl is a linear variation, da an angular variation and c the angular to linear conversion coefficient</div>
<br>
See also the <a href="apiFunctions.htm#simMoveToPosition">simMoveToPosition</a> function.
</td>
</tr>
</table>



<h3><a name="RMLFunctions"></a>Reflexxes motion library (RML) constants</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>select exactly one of following:</div>
<div class=tab>simrml_phase_sync_if_possible (default for position-based calculations)</div>
<div class=tab>simrml_only_time_sync</div>
<div class=tab>simrml_only_phase_sync</div>
<div class=tab>simrml_no_sync</div>
<br>
<div>combine with exactly one of following:</div>
<div class=tab>simrml_keep_target_vel (default for position-based calculations)</div>
<div class=tab>simrml_recompute_trajectory</div>
<br>
<div>for the position-based function, following flags can also optionally  combined:</div>
<div class=tab>simrml_disable_extremum_motion_states_calc</div>
<div class=tab>simrml_keep_current_vel_if_fallback_strategy</div>
<br>
<div>Default for position-based calculations is: simrml_phase_sync_if_possible | simrml_keep_target_vel</div>
<div>Default for velocity-based calculations is: simrml_no_sync</div>
</td>
</tr>
</table>

<h3><a name="purePrimitiveTypes"></a>Pure primitive types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_pure_primitive_none</div>
<div>sim_pure_primitive_plane</div>
<div>sim_pure_primitive_disc</div>
<div>sim_pure_primitive_cuboid</div>
<div>sim_pure_primitive_spheroid</div>
<div>sim_pure_primitive_cylinder</div>
<div>sim_pure_primitive_cone</div>
<div>sim_pure_primitive_heightfield</div>
</td>
</tr>
</table>


<h3><a name="dummyLinkTypes"></a>Dummy link types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_dummy_linktype_dynamics_loop_closure</div>
<div>sim_dummy_linktype_dynamics_force_constraint</div>
<div>sim_dummy_linktype_gcs_loop_closure</div>
<div>sim_dummy_linktype_gcs_tip</div>
<div>sim_dummy_linktype_gcs_target</div>
<div>sim_dummy_linktype_ik_tip_target</div>
</td>
</tr>
</table>


<h3><a name="physicsEngineTypes"></a>Physics engine types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_physics_bullet</div>
<div>sim_physics_ode</div>
</td>
</tr>
</table>

<h3><a name="pathPlanningTypes"></a>Path planning types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_pathplanning_holonomic</div>
<div>sim_pathplanning_nonholonomic</div>
</td>
</tr>
</table>


<h3><a name="holonomicPathPlanningTypes"></a>Holonomic path planning types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_holonomicpathplanning_xy</div>
<div>sim_holonomicpathplanning_xg</div>
<div>sim_holonomicpathplanning_xyz</div>
<div>sim_holonomicpathplanning_xyg</div>
<div>sim_holonomicpathplanning_abg</div>
<div>sim_holonomicpathplanning_xyzg</div>
<div>sim_holonomicpathplanning_xabg</div>
<div>sim_holonomicpathplanning_xyabg</div>
<div>sim_holonomicpathplanning_xyzabg</div>
</td>
</tr>
</table>


<h3><a name="fileDlgTypes"></a>File dialog types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_filedlg_type_load</div>
<div>sim_filedlg_type_save</div>
<br>
See also the <a href="apiFunctions.htm#simFileDialog">simFileDialog</a> function.
</td>
</tr>
</table>





<h3><a name="msgBoxTypes"></a>Message box types</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_msgbox_type_info</div>
<div>sim_msgbox_type_question</div>
<div>sim_msgbox_type_warning</div>
<div>sim_msgbox_type_critical</div>
<br>
See also the <a href="apiFunctions.htm#simMsgBox">simMsgBox</a> function.
</td>
</tr>
</table>





<h3><a name="msgBoxButtons"></a>Message box buttons</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_msgbox_buttons_ok</div>
<div>sim_msgbox_buttons_yesno</div>
<div>sim_msgbox_buttons_yesnocancel</div>
<div>sim_msgbox_buttons_okcancel</div>
<br>
See also the <a href="apiFunctions.htm#simMsgBox">simMsgBox</a> function.
</td>
</tr>
</table>





<h3><a name="msgBoxReturn"></a>Message box return values</h3>
<table class=apiConstantsTable >
<tr>
<td>
<div>sim_msgbox_return_cancel</div>
<div>sim_msgbox_return_no</div>
<div>sim_msgbox_return_yes</div>
<div>sim_msgbox_return_ok</div>
<br>
See also the <a href="apiFunctions.htm#simMsgBox">simMsgBox</a> function.
</td>
</tr>
</table>





<br>
<br>
</td>
 </tr>
</table> 
</div>  
  
  
</body>

</html>
