<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Remote API Functions (C/C++)</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1><a href="remoteApiOverview.htm">Remote API</a> Functions (C/C++)</h1>

<h3>
<a name="simxAddStatusbarMessage" id="simxAddStatusbarMessage"></a>simxAddStatusbarMessage 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simAddStatusbarMessage">simAddStatusbarMessage</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosAddStatusbarMessage">simRosAddStatusbarMessage</a></div>
</h3>

<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Adds a message to the status bar.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAddStatusbarMessage(const simxChar* message,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>message</strong>: the message to display</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAddStatusbarMessage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAddStatusbarMessage">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAddStatusbarMessage">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxAddStatusbarMessage">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxAuxiliaryConsoleClose" id="simxAuxiliaryConsoleClose"></a>simxAuxiliaryConsoleClose 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simAuxiliaryConsoleClose">simAuxiliaryConsoleClose</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosAuxiliaryConsoleClose">simRosAuxiliaryConsoleClose</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsoleClose(simxInt consoleHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleClose">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleClose">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsoleClose">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxAuxiliaryConsoleClose">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxAuxiliaryConsoleOpen" id="simxAuxiliaryConsoleOpen"></a>simxAuxiliaryConsoleOpen 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simAuxiliaryConsoleOpen">simAuxiliaryConsoleOpen</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosAuxiliaryConsoleOpen">simRosAuxiliaryConsoleOpen</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Opens an auxiliary console window for text display. This console window is different from the application main console window. Console window handles are shared across all simulator scenes. See also <a href="#simxAuxiliaryConsolePrint">simxAuxiliaryConsolePrint</a>, <a href="#simxAuxiliaryConsoleShow">simxAuxiliaryConsoleShow</a> and <a href="#simxAuxiliaryConsoleClose">simxAuxiliaryConsoleClose</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsoleOpen(const simxChar* title,simxInt maxLines,simxInt mode,simxInt* position,simxInt* size,simxFloat* textColor,simxFloat* backgroundColor,simxInt* consoleHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>title</strong>: the title of the console window</div>
<div><strong>maxLines</strong>: the number of text lines that can be displayed and buffered</div>
<div><strong>mode</strong>: bit-coded value. Bit0 set indicates that the console window will   automatically close at simulation end, bit1 set   indicates that lines will be wrapped, bit2 set indicates that the user   can close the console window, bit3 set indicates that the console will   automatically be hidden during simulation pause, bit4 set indicates that   the console will not automatically hide when the user switches to   another scene.</div>
<div><strong>position</strong>: the initial position of the console window (x and y value). Can be NULL</div>
<div><strong>size</strong>: the initial size of the console window (x and y value). Can be NULL</div>
<div><strong>textColor</strong>: the color of the text (rgb values, 0-1). Can be NULL</div>
<div><strong>backgroundColor</strong>: the background color of the console window (rgb values, 0-1). Can be NULL</div>
<div><strong>consoleHandle</strong>: pointer to a location receiving the handle of the created console</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleOpen">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleOpen">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsoleOpen">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxAuxiliaryConsoleOpen">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxAuxiliaryConsolePrint" id="simxAuxiliaryConsolePrint"></a>simxAuxiliaryConsolePrint 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simAuxiliaryConsolePrint">simAuxiliaryConsolePrint</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosAuxiliaryConsolePrint">simRosAuxiliaryConsolePrint</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Prints to an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsolePrint(simxInt consoleHandle,const simxChar* txt,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>txt</strong>: the text to append, or NULL to clear the console window</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsolePrint">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsolePrint">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsolePrint">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxAuxiliaryConsolePrint">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxAuxiliaryConsoleShow" id="simxAuxiliaryConsoleShow"></a>simxAuxiliaryConsoleShow 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simAuxiliaryConsoleShow">simAuxiliaryConsoleShow</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosAuxiliaryConsoleShow">simRosAuxiliaryConsoleShow</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Shows or hides an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> and <a href="#simxAuxiliaryConsoleClose">simxAuxiliaryConsoleClose</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsoleShow(simxInt consoleHandle,simxChar showState,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>showState</strong>: indicates whether the console should be hidden (0) or shown (!=0)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleShow">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleShow">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsoleShow">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxAuxiliaryConsoleShow">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxBreakForceSensor" id="simxBreakForceSensor"></a>simxBreakForceSensor 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simBreakForceSensor">simBreakForceSensor</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosBreakForceSensor">simRosBreakForceSensor</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows breaking a force sensor during simulation. A broken force sensor will lose its positional and orientational constraints. See also <a href="#simxReadForceSensor">simxReadForceSensor</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxBreakForceSensor(simxInt forceSensorHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>forceSensorHandle</strong>: handle of the force sensor</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxBreakForceSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxBreakForceSensor">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxBreakForceSensor">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxBreakForceSensor">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxClearFloatSignal" id="simxClearFloatSignal"></a>simxClearFloatSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simClearFloatSignal">simClearFloatSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosClearFloatSignal">simRosClearFloatSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears a float signal (removes it). See also <a href="#simxSetFloatSignal">simxSetFloatSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a> and <a href="#simxClearStringSignal">simxClearStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxClearFloatSignal(const simxChar* signalName,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal or an empty string to clear all float signals</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxClearFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearFloatSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxClearFloatSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxClearFloatSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxClearIntegerSignal" id="simxClearIntegerSignal"></a>simxClearIntegerSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simClearIntegerSignal">simClearIntegerSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosClearIntegerSignal">simRosClearIntegerSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears an integer signal (removes it). See also <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a> and <a href="#simxClearStringSignal">simxClearStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxClearIntegerSignal(const simxChar* signalName,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal or an empty string to clear all integer signals</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxClearIntegerSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearIntegerSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxClearIntegerSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxClearIntegerSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxClearStringSignal" id="simxClearStringSignal"></a>simxClearStringSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simClearStringSignal">simClearStringSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosClearStringSignal">simRosClearStringSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears a string signal (removes it). See also <a href="#simxSetStringSignal">simxSetStringSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a> and <a href="#simxClearFloatSignal">simxClearFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxClearStringSignal(const simxChar* signalName,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal or an empty string to clear all string signals</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxClearStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxClearStringSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxClearStringSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxCloseScene" id="simxCloseScene"></a>simxCloseScene 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simCloseScene">simCloseScene</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosCloseScene">simRosCloseScene</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes current scene, and switches to another open scene. If there is no other open scene, a new scene is then created. Should only be called when simulation is not running and is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxLoadScene">simxLoadScene</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCloseScene(simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCloseScene">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCloseScene">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCloseScene">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxCloseScene">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxCopyPasteObjects" id="simxCopyPasteObjects"></a>simxCopyPasteObjects 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simCopyPasteSelectedObjects">simCopyPasteSelectedObjects</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosCopyPasteObjects">simRosCopyPasteObjects</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Copies and pastes objects, together with all their associated calculation objects and child scripts. To copy and paste whole models, you can simply copy and paste the model base object.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCopyPasteObjects(const simxInt* objectHandles,simxInt objectCount,simxInt** newObjectHandles,simxInt* newObjectCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandles</strong>: an array containing the handles of the objects to copy</div>
<div><strong>objectCount</strong>: the number of handles the above array contains</div>
<div><strong>newObjectHandles</strong>: a pointer to a value receiving an array of handles of newly created objects. Individual objects of a new model are not returned, but only the model base. The array remains valid until next remote API function is called.</div>
<div><strong>newObjectCount</strong>: a pointer to a value receiving the number of handles the above array contains</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCopyPasteObjects">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCopyPasteObjects">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCopyPasteObjects">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxCopyPasteObjects">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxCreateBuffer" id="simxCreateBuffer"></a>simxCreateBuffer (regular API equivalent: <a href="apiFunctions.htm#simCreateBuffer">simCreateBuffer</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Creates a buffer. The buffer needs to be released with <a href="#simxReleaseBuffer">simxReleaseBuffer</a> except otherwise explicitly specified. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxChar* simxCreateBuffer(simxInt bufferSize)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>bufferSize</strong>: size of the buffer in bytes</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>A pointer to the created buffer<a href="remoteApiConstants.htm#functionErrorCodes"></a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCreateBuffer">Python</a>, <a href="remoteApiFunctionsMatlab.htm#simxCreateBuffer">Matlab</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxDisplayDialog" id="simxDisplayDialog"></a>simxDisplayDialog 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simDisplayDialog">simDisplayDialog</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosDisplayDialog">simRosDisplayDialog</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Displays a generic dialog box during simulation (and only during simulation!). Use in conjunction with <a href="#simxGetDialogResult">simxGetDialogResult</a>, <a href="#simxGetDialogInput">simxGetDialogInput</a> and <a href="#simxEndDialog">simxEndDialog</a>.Use <a href="customUserInterfaces.htm">custom user interfaces</a> instead if a higher customization level is required.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxDisplayDialog(const simxChar* titleText,const simxChar* mainText,simxInt dialogType,const simxChar* initialText,simxFloat* titleColors,simxFloat* dialogColors,simxInt* dialogHandle,simxInt* uiHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>titleText</strong>: Title bar text</div>
<div><strong>mainText</strong>: Information text</div>
<div><strong>dialogType</strong>: a <a href="apiConstants.htm#genericDialogStyles">generic dialog style</a></div>
<div><strong>initialText</strong>: Initial text in the edit box if the dialog is of type sim_dlgstyle_input. Cannot be NULL!</div>
<div><strong>titleColors</strong>: Title bar color (6 simxFloat values for RGB for background and foreground), can be NULL for default colors</div>
<div><strong>dialogColors</strong>: Dialog color (6 simxFloat values for RGB for background and foreground), can be NULL for default colors</div>
<div><strong>dialogHandle</strong>: handle of the generic dialog (different from custom user interface handle!! (see hereafter)). This handle should be used with the following functions: <a href="#simxGetDialogResult">simxGetDialogResult</a>, <a href="#simxGetDialogInput">simxGetDialogInput</a> and <a href="#simxEndDialog">simxEndDialog</a>.</div>
<div><strong>uiHandle</strong>: a pointer to a value accepting the handle of the corresponding custom user interface. Can be NULL</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxDisplayDialog">Python</a>, <a href="remoteApiFunctionsJava.htm#simxDisplayDialog">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxDisplayDialog">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxDisplayDialog">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxEndDialog" id="simxEndDialog"></a>simxEndDialog 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simEndDialog">simEndDialog</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosEndDialog">simRosEndDialog</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes and releases resource from a previous call to <a href="#simxDisplayDialog">simxDisplayDialog</a>. Even if the dialog is not visible anymore, you should release resources by using this function (however at the end of a simulation, all dialog resources are automatically released).</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxEndDialog(simxInt dialogHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxEndDialog">Python</a>, <a href="remoteApiFunctionsJava.htm#simxEndDialog">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxEndDialog">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxEndDialog">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxEraseFile" id="simxEraseFile"></a>simxEraseFile (ROS service equivalent: <a href="rosServices.htm#simRosEraseFile">simRosEraseFile</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Erases a file on the server side. This function is used by several other functions internally (e.g. <a href="#simxLoadModel">simxLoadModel</a>). See also <a href="#simxTransferFile">simxTransferFile</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxEraseFile(const simxChar* fileName_serverSide,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>fileName_serverSide</strong>: the file to erase on the server side. For now, do not specify a path (the file will be erased in the remote API plugin directory)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxEraseFile">Python</a>, <a href="remoteApiFunctionsJava.htm#simxEraseFile">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxEraseFile">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxEraseFile">Urbi</a></td> 
</tr> 
</table> 
<br>







<h3><a name="simxFinish" id="simxFinish"></a>simxFinish</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Ends the communication thread. This should be the very last remote API function called on the client side. simxFinish should only be called after a successfull call to <a href="#simxStart">simxStart</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxVoid simxFinish()</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div>none</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>none</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxFinish">Python</a>, <a href="remoteApiFunctionsJava.htm#simxFinish">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxFinish">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxFinish">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetArrayParameter" id="simxGetArrayParameter"></a>simxGetArrayParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetArrayParameter">simGetArrayParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetArrayParameter">simRosGetArrayParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves 3 values from an array. See the <a href="apiConstants.htm#arrayParameters">array parameter identifiers</a>. See also <a href="#simxSetArrayParameter">simxSetArrayParameter</a>, <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetArrayParameter(simxInt paramIdentifier,simxFloat* paramValues,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#arrayParameters">array parameter identifier</a></div>
<div><strong>paramValues</strong>: a pointer to 3 values that will receive the parameters</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetArrayParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetArrayParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetArrayParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetArrayParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetBooleanParameter" id="simxGetBooleanParameter"></a>simxGetBooleanParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetBooleanParameter">simGetBooleanParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetBooleanParameter">simRosGetBooleanParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a boolean value. See the <a href="apiConstants.htm#booleanParameters">Boolean parameter identifiers</a>. See also <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetBooleanParameter(simxInt paramIdentifier,simxChar* paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#booleanParameters">Boolean parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer that will receive the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetBooleanParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetBooleanParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetBooleanParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetBooleanParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetCollisionHandle" id="simxGetCollisionHandle"></a>simxGetCollisionHandle 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetCollisionHandle">simGetCollisionHandle</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetCollisionHandle">simRosGetCollisionHandle</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a collision  object handle based on its name. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what collision object, and send the handles as additional arguments to the client application during its launch.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetCollisionHandle(const simxChar* collisionObjectName,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>collisionObjectName</strong>: name of the collision object. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full collision object name, including the #: if the collision object is &quot;myCollision&quot;, specify &quot;myCollision#&quot;, if the collision object is &quot;myCollision#0&quot;, specify &quot;myCollision#0&quot;, etc.</div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetCollisionHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetCollisionHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetCollisionHandle">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetCollisionHandle">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxGetConnectionId" id="simxGetConnectionId"></a>simxGetConnectionId</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Returns the ID of the current connection. Use this function to track the connection state to the server. See also <a href="#simxStart">simxStart</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetConnectionId()</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div>none</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a connection ID, or -1 if the client is not connected to the server. Different connection IDs indicate temporary disconections in-between.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetConnectionId">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetConnectionId">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetConnectionId">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetConnectionId">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetDialogInput" id="simxGetDialogInput"></a>simxGetDialogInput 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetDialogInput">simGetDialogInput</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetDialogInput">simRosGetDialogInput</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Queries the text the user entered into a  generic dialog box of style sim_dlgstyle_input. To be used after <a href="#simxDisplayDialog">simxDisplayDialog</a> was called and after <a href="#simxGetDialogResult">simxGetDialogResult</a> returned sim_dlgret_ok.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetDialogInput(simxInt dialogHandle,simxChar** inputText,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>inputText</strong>: pointer to a pointer receiving the string the user entered. The pointer is valid until another remote API function is called.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait 
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetDialogInput">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDialogInput">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetDialogInput">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetDialogInput">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetDialogResult" id="simxGetDialogResult"></a>simxGetDialogResult 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetDialogResult">simGetDialogResult</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetDialogResult">simRosGetDialogResult</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Queries the result of a dialog box. To be used after <a href="#simxDisplayDialog">simxDisplayDialog</a> was called.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetDialogResult(simxInt dialogHandle,simxInt* result,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>result</strong>: pointer receiving the <a href="apiConstants.htm#genericDialogReturnValues">result value</a>. </div>
<br>
<div>Note. If the return value is sim_dlgret_still_open, the dialog was not closed and no button was pressed. Otherwise, you should free resources with <a href="#simxEndDialog">simxEndDialog</a> (the dialog might not be visible anymore, but is still present)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot 
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetDialogResult">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDialogResult">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetDialogResult">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetDialogResult">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetDistanceHandle" id="simxGetDistanceHandle"></a>simxGetDistanceHandle 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetDistanceHandle">simGetDistanceHandle</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetDistanceHandle">simRosGetDistanceHandle</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a distance  object handle based on its name. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what distance object, and send the handles as additional arguments to the client application during its launch.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetDistanceHandle(const simxChar* distanceObjectName,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>distanceObjectName</strong>: name of the distance object. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full distance object name, including the #: if the distance object is &quot;myDistance&quot;, specify &quot;myDistance#&quot;, if the distance object is &quot;myDistance#0&quot;, specify &quot;myDistance#0&quot;, etc.</div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetDistanceHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDistanceHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetDistanceHandle">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetDistanceHandle">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetFloatingParameter" id="simxGetFloatingParameter"></a>simxGetFloatingParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetFloatingParameter">simGetFloatingParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetFloatingParameter">simRosGetFloatingParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a floating point value. See the <a href="apiConstants.htm#floatingParameters">floating-point parameter identifiers</a>. See also <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>, <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetFloatingParameter(simxInt paramIdentifier,simxFloat* paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#floatingParameters">floating parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer that will receive the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetFloatingParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetFloatingParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetFloatingParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetFloatingParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetFloatSignal" id="simxGetFloatSignal"></a>simxGetFloatSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetFloatSignal">simGetFloatSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetFloatSignal">simRosGetFloatSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a float signal. Signals are cleared at simulation start. See also <a href="#simxSetFloatSignal">simxSetFloatSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a>, <a href="#simxGetIntegerSignal">simxGetIntegerSignal</a> and <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetFloatSignal(const simxChar* signalName,simxFloat* signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a location receiving the value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetFloatSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetFloatSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetFloatSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxGetInMessageInfo" id="simxGetInMessageInfo"></a>simxGetInMessageInfo</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves information about the last received message from the server. This is a remote API helper function. See also <a href="#simxGetOutMessageInfo">simxGetOutMessageInfo</a>.</div></td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetInMessageInfo(simxInt infoType,simxInt* info)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>infoType</strong>: an <a href="remoteApiConstants.htm#inboxMessageInfoType">inbox message info type</a></div>
<div><strong>info</strong>: pointer to a simxInt value receiving the requested information
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>-1 in case of an error</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetInMessageInfo">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetInMessageInfo">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetInMessageInfo">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetInMessageInfo">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetIntegerParameter" id="simxGetIntegerParameter"></a>simxGetIntegerParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetIntegerParameter">simGetIntegerParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetIntegerParameter">simRosGetIntegerParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an integer value. See the <a href="apiConstants.htm#integerParameters">integer parameter identifiers</a>. See also <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a>, <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetStringParameter">simxGetStringParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetIntegerParameter(simxInt paramIdentifier,simxInt* paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#integerParameters">integer parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer that will receive the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetIntegerParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetIntegerParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetIntegerParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetIntegerParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetIntegerSignal" id="simxGetIntegerSignal"></a>simxGetIntegerSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetIntegerSignal">simGetIntegerSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetIntegerSignal">simRosGetIntegerSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of an integer signal. Signals are cleared at simulation start. See also <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a>, <a href="#simxGetFloatSignal">simxGetFloatSignal</a> and <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetIntegerSignal(const simxChar* signalName,simxInt* signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a location receiving the value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetIntegerSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetIntegerSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetIntegerSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetIntegerSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetJointMatrix" id="simxGetJointMatrix"></a>simxGetJointMatrix 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetJointMatrix">simGetJointMatrix</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetJointMatrix">simRosGetJointMatrix</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the intrinsic transformation matrix of a joint (the transformation caused by the joint movement). See also <a href="#simxSetSphericalJointMatrix">simxSetSphericalJointMatrix</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetJointMatrix(simxInt jointHandle,simxFloat* matrix,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>matrix</strong>: pointer to 12 simxFloat values. See the regular API equivalent function for details
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetJointMatrix">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointMatrix">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetJointMatrix">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetJointMatrix">Urbi</a></td> 
</tr> 
</table> 
<br>










<h3>
<a name="simxGetJointPosition" id="simxGetJointPosition"></a>simxGetJointPosition 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetJointPosition">simGetJointPosition</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetJointState">simRosGetJointState</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the intrinsic position of a joint. This function cannot be used with spherical joints (use <a href="#simxGetJointMatrix">simxGetJointMatrix</a> instead). See also <a href="#simxSetJointPosition">simxSetJointPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetJointPosition(simxInt jointHandle,simxFloat* position,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>position</strong>: intrinsic position of the joint. This is a one-dimensional value: if the joint is revolute, the rotation angle is returned, if the joint is prismatic, the translation amount is returned, etc.
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetJointPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetJointPosition">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetJointPosition">Urbi</a></td> 
</tr> 
</table> 
<br>












<h3><a name="simxGetLastCmdTime" id="simxGetLastCmdTime"></a>simxGetLastCmdTime</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves the simulation time of the last fetched command (i.e. when the last fetched command was processed on the server side). The function can be used to verify how &quot;fresh&quot; a command reply is, or whether a command reply was recently updated. For example:</div>
<br>

<pre class=lightPurpleBoxNoMarginAndSmall>
if (simxGetVisionSensorImage(handle,res,&amp;img,0,sim_opmode_buffer)==simx_error_noerror)
    imageAcquisitionTime=simxGetLastCmdTime();
</pre>

<br>
<div>This is a remote API helper function.</div></td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetLastCmdTime()</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div>none</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>The simulation time in milliseconds when the command reply was generated, or 0 if simulation was not running.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetLastCmdTime">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetLastCmdTime">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetLastCmdTime">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetLastCmdTime">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetLastErrors" id="simxGetLastErrors"></a>simxGetLastErrors 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetLastError">simGetLastError</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetLastErrors">simRosGetLastErrors</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the last 50 errors that occured on the server side, and clears the error buffer there. Only errors that occured because of this client will be reported.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetLastErrors(simxInt* errorCnt,simxChar** errorStrings,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>errorCnt</strong>: pointer receiving the number of error strings returned</div>
<div><strong>errorStrings</strong>: pointer to a string pointer receiving the address of an error string (individual strings are separated by a zero character). The address is valid until next remote API function is called</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls) when not debugging. For debugging purposes, use simx_opmode_oneshot_wait.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetLastErrors">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetLastErrors">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetLastErrors">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetLastErrors">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetModelProperty" id="simxGetModelProperty"></a>simxGetModelProperty 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetModelProperty">simGetModelProperty</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetModelProperty">simRosGetModelProperty</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the properties of a model. See also <a href="#simxSetModelProperty">simxSetModelProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetModelProperty(simxInt objectHandle,simxInt* prop,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>prop</strong>: pointer to a location receiving the <a href="apiConstants.htm#modelProperties">model property value</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_oneshot_wait (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetModelProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetModelProperty">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetModelProperty">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetModelProperty">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectChild" id="simxGetObjectChild"></a>simxGetObjectChild 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectChild">simGetObjectChild</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectChild">simRosGetObjectChild</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the handle of an object's child object. See also <a href="#simxGetObjectParent">simxGetObjectParent</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectChild(simxInt parentObjectHandle,simxInt childIndex,simxInt* childObjectHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>parentObjectHandle</strong>: handle of the object</div>
<div><strong>childIndex</strong>: zero-based index of the child's position. To retrieve all children of an object, call the function by increasing the index until the child handle is  -1</div>
<div><strong>childObjectHandle</strong>: pointer to a value receiving the handle of the child object. If the value is -1, there is no child at the given index</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectChild">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectChild">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectChild">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectChild">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectFloatParameter" id="simxGetObjectFloatParameter"></a>simxGetObjectFloatParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectFloatParameter">simGetObjectFloatParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectFloatParameter">simRosGetObjectFloatParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a floating-point parameter of a object. See also <a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a> and <a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectFloatParameter(simxInt objectHandle,simxInt parameterID,simxFloat* parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to retrieve. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: pointer to a location that will receive the value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_oneshot_wait (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectFloatParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectFloatParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectFloatParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectFloatParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectHandle" id="simxGetObjectHandle"></a>simxGetObjectHandle 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectHandle">simGetObjectHandle</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectHandle">simRosGetObjectHandle</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an object handle based on its name. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what objects, and send the handles as additional arguments to the client application during its launch.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectHandle(const simxChar* objectName,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectName</strong>: name of the object. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full object name, including the #: if the object is &quot;myJoint&quot;, specify &quot;myJoint#&quot;, if the object is &quot;myJoint#0&quot;, specify &quot;myJoint#0&quot;, etc.</div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectHandle">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectHandle">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectIntParameter" id="simxGetObjectIntParameter"></a>simxGetObjectIntParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectIntParameter">simGetObjectIntParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectIntParameter">simRosGetObjectIntParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an integer parameter of a object. See also <a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a> and <a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectIntParameter(simxInt objectHandle,simxInt parameterID,simxInt* parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to retrieve. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: pointer to a location that will receive the value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_oneshot_wait (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectIntParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectIntParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectIntParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectIntParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectOrientation" id="simxGetObjectOrientation"></a>simxGetObjectOrientation 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectOrientation">simGetObjectOrientation</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectPose">simRosGetObjectPose</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the orientation (Euler angles) of an object. See also <a href="#simxSetObjectOrientation">simxSetObjectOrientation</a> and <a href="#simxGetObjectPosition">simxGetObjectPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectOrientation(simxInt objectHandle,simxInt relativeToObjectHandle,simxFloat* eulerAngles,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the orientation.   Specify -1 to retrieve the absolute orientation, sim_handle_parent to   retrieve the orientation relative to the object's parent, or an object   handle relative to whose reference frame you want the orientation</div>
<div><strong>eulerAngles</strong>: pointer to 3 values receiving the Euler angles (alpha, beta and gamma)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectOrientation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectOrientation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectOrientation">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectOrientation">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectParent" id="simxGetObjectParent"></a>simxGetObjectParent 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectParent">simGetObjectParent</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectParent">simRosGetObjectParent</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the handle of an object's parent object. See also <a href="#simxGetObjectChild">simxGetObjectChild</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectParent(simxInt objectHandle,simxInt* parentObjectHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parentObjectHandle</strong>: pointer to a value receiving the handle of the parent object. If the value is -1, the object has no parent</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectParent">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectParent">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectParent">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectParent">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectPosition" id="simxGetObjectPosition"></a>simxGetObjectPosition 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectPosition">simGetObjectPosition</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectPose">simRosGetObjectPose</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the position  of an object. See also <a href="#simxSetObjectPosition">simxSetObjectPosition</a> and <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectPosition(simxInt objectHandle,simxInt relativeToObjectHandle,simxFloat* position,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the position.   Specify -1 to retrieve the absolute position, sim_handle_parent to   retrieve the position relative to the object's parent, or an object   handle relative to whose reference frame you want the position</div>
<div><strong>position</strong>: pointer to 3 values receiving the position</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectPosition">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectPosition">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjects" id="simxGetObjects"></a>simxGetObjects 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjects">simGetObjects</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjects">simRosGetObjects</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves object handles of a given type, or of all types (i.e. all object handles).</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjects(simxInt objectType,simxInt* objectCount,simxInt** objectHandles,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectType</strong>: <a href="apiConstants.htm#sceneObjectTypes">object type</a> (sim_object_shape_type, sim_object_joint_type, etc., or sim_handle_all for any type of object</div>
<div><strong>objectCount</strong>: pointer to a value that will receive the number of retrieved handles</div>
<div><strong>objectHandles</strong>: pointer to a pointer that will receive an object handle array. The array remains valid until next remote API function is called.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjects">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjects">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjects">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjects">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetObjectSelection" id="simxGetObjectSelection"></a>simxGetObjectSelection 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetObjectSelection">simGetObjectSelection</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetObjectSelection">simRosGetObjectSelection</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves all selected object's handles. See also <a href="#simxSetObjectSelection">simxSetObjectSelection</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectSelection(simxInt** objectHandles,simxInt* objectCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandles</strong>: pointer to a pointer that will receive an object handle array. The array remains valid until next remote API function is called.</div>
<div><strong>objectCount</strong>: pointer to a value that will receive the number of elements in above's array.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_oneshot_wait depending on the intent.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectSelection">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectSelection">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectSelection">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetObjectSelection">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxGetOutMessageInfo" id="simxGetOutMessageInfo"></a>simxGetOutMessageInfo</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves information about the next message to send to the server. This is a remote API helper function. See also <a href="#simxGetInMessageInfo">simxGetInMessageInfo</a>.</div></td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetOutMessageInfo(simxInt infoType,simxInt* info)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>infoType</strong>: an <a href="remoteApiConstants.htm#outboxMessageInfoType">outbox message info type</a></div>
<div><strong>info</strong>: pointer to a simxInt value receiving the requested information
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>-1 in case of an error</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetOutMessageInfo">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetOutMessageInfo">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetOutMessageInfo">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetOutMessageInfo">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxGetPingTime" id="simxGetPingTime"></a>simxGetPingTime</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the time needed for a command to be sent to the server, executed, and sent back. That time depends on various factors like the client settings, the network load, whether a simulation is running, whether the simulation is real-time, the simulation time step, etc. The function is blocking. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetPingTime(simxInt* pingTime)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>pingTime</strong>: a pointer to a simxInt value accepting the ping time in milliseconds.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetPingTime">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetPingTime">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetPingTime">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetPingTime">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetStringParameter" id="simxGetStringParameter"></a>simxGetStringParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetStringParameter">simGetStringParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetStringParameter">simRosGetStringParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a string value. See the <a href="apiConstants.htm#stringParameters">string parameter identifiers</a>. See also <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxGetArrayParameter">simxGetArrayParameter</a> and <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetStringParameter(simxInt paramIdentifier,simxChar** paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#stringParameters">string parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer to a pointer that will receive the string. The string pointer is valid until next remote API function is called.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetStringParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetStringParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetStringParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetStringParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetStringSignal" id="simxGetStringSignal"></a>simxGetStringSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetStringSignal">simGetStringSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetStringSignal">simRosGetStringSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a string signal. Signals are cleared at simulation start. See also <a href="#simxSetStringSignal">simxSetStringSignal</a>, <a href="#simxClearStringSignal">simxClearStringSignal</a>, <a href="#simxGetIntegerSignal">simxGetIntegerSignal</a> and <a href="#simxGetFloatSignal">simxGetFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetStringSignal(const simxChar* signalName,simxChar** signalValue,simxInt* signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a pointer receiving the value of the signal. The signal value will remain valid until next remote API call</div>
<div><strong>signalLength</strong>: pointer to a location receiving the value of the signal length, since it may contain any data (also embedded zeros). </div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetStringSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetStringSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetUIButtonProperty" id="simxGetUIButtonProperty"></a>simxGetUIButtonProperty 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetUIButtonProperty">simGetUIButtonProperty</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetUIButtonProperty">simRosGetUIButtonProperty</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the properties of a custom user interface button. See also <a href="#simxSetUIButtonProperty">simxSetUIButtonProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetUIButtonProperty(simxInt uiHandle,simxInt uiButtonID,simxInt* prop,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiHandle</strong>: handle of the custom user interface</div>
<div><strong>uiButtonID</strong>: handle (or id) of the custom user interface button</div>
<div><strong>prop</strong>: pointer to an integer accepting a <a href="apiConstants.htm#uiButtonProperties">button property value</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetUIButtonProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetUIButtonProperty">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetUIButtonProperty">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetUIButtonProperty">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetUIEventButton" id="simxGetUIEventButton"></a>simxGetUIEventButton 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetUIEventButton">simGetUIEventButton</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetUIEventButton">simRosGetUIEventButton</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the button handle (i.e. ID) and some auxiliary values of the last occurred event in that custom user interface. The function will then clear the event. When a custom user interface button is pressed, a slider is moved or an edit box is changed, an event is registered and stored in the custom user interface.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetUIEventButton(simxInt uiHandle,simxInt* uiEventButtonID,simxInt* auxValues,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiHandle</strong>: handle of the custom user interface</div>
<div><strong>uiEventButtonID</strong>: id of the UI button where an event occured, or -1 if no event occured</div>
<div><strong>auxValues</strong>: 2 values (can be NULL).</div>
<div class=tab>value1: the <a href="apiConstants.htm#uiButtonProperties">button property</a></div>
<div class=tab>value2: for sliders: slider state (0-1000), for stay down buttons: down state (0 or 1), for up/down event buttons: up/down events (0 or 1)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Since this function will clear a read event, and we cannot afford to wait for a reply (well, we could, but that would mean a blocking operation), the function operates in a special mode and should be used as in following example:</div>

<br>
<pre class=lightPurpleBoxNoMarginAndSmall>
// Initialization phase:
int uiHandle=-1;
simxGetUIHandle("UI",&UiHandle,simx_opmode_oneshot_wait);
int buttonEventID=-1;
simxGetUIEventButton(uiHandle,&amp;buttonEventID,NULL,simx_opmode_streaming);

// while we are connected:
while (simxGetConnectionId()!=-1)
{ 
  if ((simxGetUIEventButton(uiHandle,&amp;buttonEventID,NULL,simx_opmode_buffer)==
      simx_error_noerror)&amp;&amp;(buttonEventID!=-1) )
  {
    // A button was pressed/edited/changed. React to it here!
    // Enable streaming again (was automatically disabled with the positive event):
    simxGetUIEventButton(uiHandle,&amp;buttonEventID,NULL,simx_opmode_streaming);
  }

  ..

}</pre>


</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetUIEventButton">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetUIEventButton">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetUIEventButton">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetUIEventButton">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetUIHandle" id="simxGetUIHandle"></a>simxGetUIHandle 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetUIHandle">simGetUIHandle</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetUIHandle">simRosGetUIHandle</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the handle of a custom user interface. If the client application is launched from a <a href="childScripts.htm">child script</a>, then you could also let the child script figure out what handle correspond to what UIs, and send the handles as additional arguments to the client application during its launch.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetUIHandle(const simxChar* uiName,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiName</strong>: name of the UI. If possibe, don't rely on the <a href="accessingGeneralObjects.htm">automatic name adjustment mechanism</a>, and always specify the full object name, including the #: if the UI is &quot;myUI&quot;, specify &quot;myUI#&quot;, if the UI is &quot;myUI#0&quot;, specify &quot;myUI#0&quot;, etc.</div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetUIHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetUIHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetUIHandle">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetUIHandle">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetUISlider" id="simxGetUISlider"></a>simxGetUISlider 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetUISlider">simGetUISlider</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetUISlider">simRosGetUISlider</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the slider position of a custom user interface button (must be slider-type button). See also <a href="#simxSetUISlider">simxSetUISlider</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetUISlider(simxInt uiHandle,simxInt uiButtonID,simxInt* position,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiHandle</strong>: handle of the custom user interface</div>
<div><strong>uiButtonID</strong>: handle of a button inside the specified custom user interface</div>
<div><strong>position</strong>: pointer to an integer receiving the slider position (value between 0 and 1000)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetUISlider">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetUISlider">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetUISlider">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetUISlider">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetVisionSensorDepthBuffer" id="simxGetVisionSensorDepthBuffer"></a>simxGetVisionSensorDepthBuffer 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetVisionSensorDepthBuffer">simGetVisionSensorDepthBuffer</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetVisionSensorDepthBuffer">simRosGetVisionSensorDepthBuffer</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the depth buffer of a vision sensor. The returned data doesn't make sense if <a href="apiFunctions.htm#simHandleVisionSensor">simHandleVisionSensor</a> wasn't called previously (simHandleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the &quot;freshness&quot; of the retrieved data. See also <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>.</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetVisionSensorDepthBuffer(simxInt sensorHandle,simxInt* resolution,simxFloat** buffer,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>resolution</strong>: pointer to 2 simxInt values receiving the resolution of the image</div>
<div><strong>buffer</strong>: pointer to a pointer to the depth buffer data. The data remains valid until next remote API function is called (i.e. the data is automatically released). Values are in the range of 0-1 (0=closest to sensor, 1=farthest from sensor).</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming_split+4000 (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetVisionSensorDepthBuffer">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorDepthBuffer">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetVisionSensorDepthBuffer">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetVisionSensorDepthBuffer">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxGetVisionSensorImage" id="simxGetVisionSensorImage"></a>simxGetVisionSensorImage 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simGetVisionSensorImage">simGetVisionSensorImage</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetVisionSensorImage">simRosGetVisionSensorImage</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the image of a vision sensor. The returned data doesn't make sense if <a href="apiFunctions.htm#simHandleVisionSensor">simHandleVisionSensor</a> wasn't called previously (simHandleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the &quot;freshness&quot; of the retrieved data. See also <a href="#simxSetVisionSensorImage">simxSetVisionSensorImage</a>, <a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a> and <a href="#simxReadVisionSensor">simxReadVisionSensor</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetVisionSensorImage(simxInt sensorHandle,simxInt* resolution,simxChar** image,simxChar options,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>resolution</strong>: pointer to 2 simxInt values receiving the resolution of the image</div>
<div><strong>image</strong>: pointer to a pointer to the image data. The data remains valid until next remote API function is called (i.e. the data is automatically released)</div>
<div><strong>options</strong>: image options, bit-coded:</div>
<div class=tab>bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming_split+4000 (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetVisionSensorImage">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxGetVisionSensorImage">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxJointGetForce" id="simxJointGetForce"></a>simxJointGetForce 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simJointGetForce">simJointGetForce</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosGetJointState">simRosGetJointState</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the force or torque a joint exerts along/about its active axis. This function retrieves meaningful information only if the joint is prismatic or revolute, and is dynamically enabled. With the Bullet engine, this function returns the force or torque the joint motor exerts (forces/torques from joint limits are not taken into account). With the ODE engine, this function returns the total force or torque a joint exerts along/about its z-axis. See also <a href="#simxSetJointForce">simxSetJointForce</a> and <a href="#simxReadForceSensor">simxReadForceSensor</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxJointGetForce(simxInt jointHandle,simxFloat* force,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>force</strong>: the force or the torque the joint exerts along/about its z-axis
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxJointGetForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxJointGetForce">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxJointGetForce">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxJointGetForce">Urbi</a></td> 
</tr> 
</table> 
<br>
















<h3>
<a name="simxLoadModel" id="simxLoadModel"></a>simxLoadModel 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simLoadModel">simLoadModel</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosLoadModel">simRosLoadModel</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Loads a previously saved model. See also <a href="#simxLoadUI">simxLoadUI</a>, <a href="#simxLoadScene">simxLoadScene</a> and <a href="#simxTransferFile">simxTransferFile</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxLoadModel(const simxChar* modelPathAndName,simxChar options,simxInt* baseHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>modelPathAndName</strong>: the model filename, including the path and extension ("ttm"). The file is relative to the client or server system depending on the <strong>options</strong> value (see next argument)</div>
<div><strong>options</strong>: options, bit-coded:</div>
<div class=tab>bit0 set: the specified file is located on the client side (in that case the function will be blocking since the model first has to be transferred to the server). Otherwise it is located on the server side</div>
<div><strong>baseHandle</strong>: the loaded model base. Can be NULL.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxLoadModel">Python</a>, <a href="remoteApiFunctionsJava.htm#simxLoadModel">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxLoadModel">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxLoadModel">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxLoadScene" id="simxLoadScene"></a>simxLoadScene 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simLoadScene">simLoadScene</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosLoadScene">simRosLoadScene</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Loads a previously saved scene. Should only be called when simulation is not running and is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxCloseScene">simxCloseScene</a>, <a href="#simxLoadModel">simxLoadModel</a>, <a href="#simxLoadUI">simxLoadUI</a> and <a href="#simxTransferFile">simxTransferFile</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxLoadScene(const simxChar* scenePathAndName,simxChar options,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>scenePathAndName</strong>: the scene filename, including the path and extension ("ttt"). The file is relative to the client or server system depending on the <strong>options</strong> value (see next argument)</div>
<div><strong>options</strong>: options, bit-coded:</div>
<div class=tab>bit0 set: the specified file is located on the client side (in that case the function will be blocking since the scene first has to be transferred to the server). Otherwise it is located on the server side</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxLoadScene">Python</a>, <a href="remoteApiFunctionsJava.htm#simxLoadScene">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxLoadScene">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxLoadScene">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxLoadUI" id="simxLoadUI"></a>simxLoadUI 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simLoadUI">simLoadUI</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosLoadUI">simRosLoadUI</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Loads previously saved custom user interfaces. See also <a href="#simxLoadModel">simxLoadModel</a>, <a href="#simxLoadScene">simxLoadScene</a> and <a href="#simxTransferFile">simxTransferFile</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxLoadUI(const simxChar* uiPathAndName,simxChar options,simxInt* count,simxInt** uiHandles,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiPathAndName</strong>: the ui filename, including the path and extension ("ttb"). The file is relative to the client or server system depending on the <strong>options</strong> value (see next argument)</div>
<div><strong>options</strong>: options, bit-coded:</div>
<div class=tab>bit0 set: the specified file is located on the client side (in that case the function will be blocking since the UI file first has to be transferred to the server). Otherwise it is located on the server side</div>
<div><strong>count</strong>: a pointer to a value receiving the number of loaded custom user interfaces (one UI file might contain several custom user interfaces).</div>
<div><strong>uiHandles</strong>: a pointer to a pointer  receiving the loaded UI handles. The user is in charge of releasing the buffer with <a href="#simxReleaseBuffer">simxReleaseBuffer</a>(*uiHandles)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxLoadUI">Python</a>, <a href="remoteApiFunctionsJava.htm#simxLoadUI">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxLoadUI">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxLoadUI">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxPauseCommunication" id="simxPauseCommunication"></a>simxPauseCommunication
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows to temporarily halt the communication thread from sending data. This can be useful if you need to send several values to V-REP that should be received and evaluated at the same time. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxPauseCommunication(simxChar pause)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>pause</strong>: whether the communication thread should pause or run normally.
</div>

<br>
<div>Usage example:</div>
<pre class=lightPurpleBoxNoMarginAndSmall>
simxPauseCommunication(1);
simxSetJointPosition(joint1Handle,joint1Value,simx_opmode_oneshot);
simxSetJointPosition(joint2Handle,joint2Value,simx_opmode_oneshot);
simxSetJointPosition(joint3Handle,joint3Value,simx_opmode_oneshot);
simxPauseCommunication(0);

// Above's 3 joints will be received and set on the V-REP side at the same time</pre>



</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>0 in case of operation success.<a href="remoteApiConstants.htm#functionErrorCodes"></a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxPauseCommunication">Python</a>, <a href="remoteApiFunctionsJava.htm#simxPauseCommunication">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxPauseCommunication">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxPauseCommunication">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxPauseSimulation" id="simxPauseSimulation"></a>simxPauseSimulation 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simPauseSimulation">simPauseSimulation</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosPauseSimulation">simRosPauseSimulation</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a pause of a simulation. See also <a href="#simxStartSimulation">simxStartSimulation</a> and <a href="#simxStopSimulation">simxStopSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxPauseSimulation(simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxPauseSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxPauseSimulation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxPauseSimulation">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxPauseSimulation">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxReadCollision" id="simxReadCollision"></a>simxReadCollision 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simReadCollision">simReadCollision</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosReadCollision">simRosReadCollision</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the collision state of a registered collision object. This function doesn't perform collision detection, it merely reads the result from a previous call to <a href="apiFunctions.htm#simHandleCollision">simHandleCollision</a> (simHandleCollision is called in the default main script). </td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadCollision(simxInt collisionObjectHandle,simxChar* collisionState,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>collisionObjectHandle</strong>: handle of the collision object</div>
<div><strong>collisionState</strong>: a pointer to a value receiving the collision state (0: not colliding)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadCollision">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadCollision">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadCollision">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxReadCollision">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxReadDistance" id="simxReadDistance"></a>simxReadDistance 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simReadDistance">simReadDistance</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosReadDistance">simRosReadDistance</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the distance that a  registered distance object measured. This function doesn't perform minimum distance calculation, it merely reads the result from a previous call to <a href="apiFunctions.htm#simHandleDistance">simHandleDistance</a> (simHandleDistance is called in the default main script). </td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadDistance(simxInt distanceObjectHandle,simxFloat* minimumDistance,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>distanceObjectHandle</strong>: handle of the distance object</div>
<div><strong>minimumDistance</strong>: a pointer to a value receiving the minimum distance</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadDistance">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadDistance">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadDistance">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxReadDistance">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxReadForceSensor" id="simxReadForceSensor"></a>simxReadForceSensor 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simReadForceSensor">simReadForceSensor</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosReadForceSensor">simRosReadForceSensor</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the force and torque applied to a force sensor (filtered values are read), and its current state ('unbroken' or 'broken'). See also <a href="#simxBreakForceSensor">simxBreakForceSensor</a> and <a href="#simxJointGetForce">simxJointGetForce</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadForceSensor(simxInt forceSensorHandle,simxChar* state,simxFloat* forceVector,simxFloat* torqueVector,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>forceSensorHandle</strong>: handle of the force sensor</div>
<div><strong>state</strong>: pointer to a byte value receiving the state of the force sensor. Can be NULL</div>
<div class=tab>bit 0 set: force and torque data is available, otherwise it is not (yet) available (e.g. when not enough values are present for the filter)</div>
<div class=tab>bit 1 set: force sensor is broken, otherwise it is still intact ('unbroken')</div>
<div><strong>forceVector</strong>: pointer to 3 float values receiving the force vector. Can be NULL</div>
<div><strong>torqueVector</strong>: pointer to 3 float values receiving the torque vector. Can be NULL</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadForceSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadForceSensor">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadForceSensor">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxReadForceSensor">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxReadProximitySensor" id="simxReadProximitySensor"></a>simxReadProximitySensor 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simReadProximitySensor">simReadProximitySensor</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosReadProximitySensor">simRosReadProximitySensor</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the state of a proximity sensor. This function doesn't perform detection, it merely reads the result from a previous call to <a href="apiFunctions.htm#simHandleProximitySensor">simHandleProximitySensor</a> (simHandleProximitySensor is called in the default main script).</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadProximitySensor(simxInt sensorHandle,simxChar* detectionState,simxFloat* detectedPoint,simxInt* detectedObjectHandle,simxFloat* detectedSurfaceNormalVector,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>sensorHandle</strong>: handle of the proximity sensor</div>
<div><strong>detectionState</strong>: pointer to a value receiving the detection state (0=no detection). Can be NULL.</div>
<div><strong>detectedPoint</strong>: pointer to 3 values receiving the detected point coordinates (relative to the sensor reference frame). Can be NULL.</div>
<div><strong>detectedObjectHandle</strong>: pointer to a value receiving the handle of the detected object. Can be NULL.</div>
<div><strong>detectedSurfaceNormalVector</strong>: pointer to 3 values receiving the normal vector (normalized) of the detected surface. Relative to the sensor reference frame. Can be NULL</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadProximitySensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadProximitySensor">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadProximitySensor">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxReadProximitySensor">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxReadVisionSensor" id="simxReadVisionSensor"></a>simxReadVisionSensor 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simReadVisionSensor">simReadVisionSensor</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosReadVisionSensor">simRosReadVisionSensor</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the state of a vision sensor. This function doesn't perform detection, it merely reads the result from a previous call to <a href="apiFunctions.htm#simHandleVisionSensor">simHandleVisionSensor</a> (simHandleVisionSensor is called in the default main script). See also <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadVisionSensor(simxInt sensorHandle,simxChar* detectionState,simxFloat** auxValues,simxInt** auxValuesCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>detectionState</strong>: pointer to a byte that receives the detection state (i.e. the trigger state). Can be NULL</div>
<div><strong>auxValues</strong>: auxiliary values returned from the <a href="visionSensorFilterComposition.htm">applied filters</a>. By default V-REP returns one packet of 15 auxiliary values:the minimum of {intensity, red, green, blue, depth value}, the maximum of {intensity, red, green, blue, depth value}, and the average of {intensity, red, green, blue, depth value}. If additional filter components return values, then they will be appended as packets to the first packet. AuxValues can be NULL if auxValuesCount is also NULL. The user is in charge of releasing the auxValues buffer with <a href="#simxReleaseBuffer">simxReleaseBuffer</a>(*auxValues).</div>
<div><strong>auxValuesCount</strong>: contains information about the number of auxiliary value packets and packet sizes returned in auxValues. The first value is the number of packets, the second is the size of packet1, the third is the size of packet2, etc. Can be NULL if auxValues is also NULL. The user is in charge of releasing the auxValuesCount buffer with <a href="#simxReleaseBuffer">simxReleaseBuffer</a>(*auxValuesCount).</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadVisionSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadVisionSensor">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadVisionSensor">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxReadVisionSensor">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxReleaseBuffer" id="simxReleaseBuffer"></a>simxReleaseBuffer (regular API equivalent: <a href="apiFunctions.htm#simReleaseBuffer">simReleaseBuffer</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Releases a buffer previously created with <a href="#simxCreateBuffer">simxCreateBuffer</a> or a buffer returned by a remote API function. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxVoid simxReleaseBuffer(simxChar* buffer)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>buffer</strong>: buffer to be released</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>none<a href="remoteApiConstants.htm#functionErrorCodes"></a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReleaseBuffer">Python</a>, <a href="remoteApiFunctionsMatlab.htm#simxReleaseBuffer">Matlab</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxRemoveObject" id="simxRemoveObject"></a>simxRemoveObject 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simRemoveObject">simRemoveObject</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosRemoveObject">simRosRemoveObject</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Removes a scene object.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxRemoveObject(simxInt objectHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object to remove</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot (or simx_opmode_oneshot_wait)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxRemoveObject">Python</a>, <a href="remoteApiFunctionsJava.htm#simxRemoveObject">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxRemoveObject">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxRemoveObject">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxRemoveUI" id="simxRemoveUI"></a>simxRemoveUI 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simRemoveUI">simRemoveUI</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosRemoveUI">simRosRemoveUI</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Removes a custom user interface.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxRemoveUI(simxInt uiHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiHandle</strong>: handle of the custom user interface</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot (or simx_opmode_oneshot_wait)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxRemoveUI">Python</a>, <a href="remoteApiFunctionsJava.htm#simxRemoveUI">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxRemoveUI">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxRemoveUI">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxRMLPosition" id="simxRMLPosition"></a>simxRMLPosition 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simRMLPosition">simRMLPosition</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosRMLPosition">simRosRMLPosition</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Executes a call to the <a href="http://www.reflexxes.com">Reflexxes Motion Library type IV</a>. The Reflexxes Motion Library type IV provides instantaneous trajectory generation capabilities for motion control systems.  This function executes the position-based trajectory generation algorithm (RMLPosition). This function is often used with the remote API <a href="#simxSynchronous">synchronous</a> mode enabled. See also <a href="#simxRMLVelocity">simxRMLVelocity</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxRMLPosition(simxInt dofs,simxDouble timeStep,simxInt flags,const simxDouble* currentPosVelAccel,const simxDouble* maxVelAccelJerk,const simxChar* selection,const simxDouble* targetPosVel,simxInt* rmlState,simxDouble* newPosVelAccel,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>dofs</strong>: the number of degrees of freedom</div>
<div><strong>timeStep</strong>: the cycle time</div>
<div><strong>flags</strong>: <a href="apiConstants.htm#RMLFunctions">RML flags</a>. -1 for default flags.</div>
<div><strong>currentPosVelAccel</strong>: the current position, velocity and acceleration. Arrange values as {pos1,pos2,..,posN,vel1,vel2,..,velN,accel1,accel2,..,accelN}</div>

<div><strong>maxVelAccelJerk</strong>: the maximum allowed velocity, acceleration and jerk. Arrange values as {vel1,vel2,..,velN,accel1,accel2,..,accelN,jerk1,jerk2,..,jerkN}</div>
<div><strong>selection</strong>: the selection vector (one value for each DoF)</div>

<div><strong>targetPosVel</strong>: the  target position and velocity. Arrange values as {pos1,pos2,..,posN,vel1,vel2,..,velN}</div>
<div><strong>newPosVelAccl</strong>: the new position, velocity and acceleration (output values). Values are arranged as {pos1,pos2,..,posN,vel1,vel2,..,velN,accel1,accel2,..,accelN}</div>

<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
TODO</td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxRMLVelocity" id="simxRMLVelocity"></a>simxRMLVelocity 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simRMLVelocity">simRMLVelocity</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosRMLVelocity">simRosRMLVelocity</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Executes a call to the <a href="http://www.reflexxes.com">Reflexxes Motion Library type IV</a>. The Reflexxes Motion Library type IV provides instantaneous trajectory generation capabilities for motion control systems.  This function executes the velocity-based trajectory generation algorithm (RMLVelocity). This function is often used with the remote API <a href="#simxSynchronous">synchronous</a> mode enabled. See also <a href="#simxRMLPosition">simxRMLPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxRMLVelocity(simxInt dofs,simxDouble timeStep,simxInt flags,const simxDouble* currentPosVelAccel,const simxDouble* maxAccelJerk,const simxChar* selection,const simxDouble* targetVel,simxInt* rmlState,simxDouble* newPosVelAccel,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>dofs</strong>: the number of degrees of freedom</div>
<div><strong>timeStep</strong>: the cycle time</div>
<div><strong>flags</strong>: <a href="apiConstants.htm#RMLFunctions">RML flags</a>. -1 for default flags.</div>
<div><strong>currentPosVelAccel</strong>: the current position, velocity and acceleration. Arrange values as {pos1,pos2,..,posN,vel1,vel2,..,velN,accel1,accel2,..,accelN}</div>

<div><strong>maxAccelJerk</strong>: the maximum allowed acceleration and jerk. Arrange values as {accel1,accel2,..,accelN,jerk1,jerk2,..,jerkN}</div>
<div><strong>selection</strong>: the selection vector (one value for each DoF)</div>

<div><strong>targetVel</strong>: the  target velocity (one value for each DoF)</div>
<div><strong>newPosVelAccl</strong>: the new position, velocity and acceleration (output values). Values are arranged as {pos1,pos2,..,posN,vel1,vel2,..,velN,accel1,accel2,..,accelN}</div>

<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
TODO</td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetArrayParameter" id="simxSetArrayParameter"></a>simxSetArrayParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetArrayParameter">simSetArrayParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetArrayParameter">simRosSetArrayParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets 3 values of an <a href="apiConstants.htm#arrayParameters">array parameter</a>. See also <a href="#simxGetArrayParameter">simxGetArrayParameter</a>, <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a> and <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetArrayParameter(simxInt paramIdentifier,const simxFloat* paramValues,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#arrayParameters">array parameter identifier</a></div>
<div><strong>paramValues</strong>: the array containing the 3 values to set</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetArrayParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetArrayParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetArrayParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetArrayParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetBooleanParameter" id="simxSetBooleanParameter"></a>simxSetBooleanParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetBooleanParameter">simSetBooleanParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetBooleanParameter">simRosSetBooleanParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a <a href="apiConstants.htm#booleanParameters">boolean parameter</a>. See also <a href="#simxGetBooleanParameter">simxGetBooleanParameter</a>, <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a>, <a href="#simxSetArrayParameter">simxSetArrayParameter</a> and <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetBooleanParameter(simxInt paramIdentifier,simxChar paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#booleanParameters">Boolean parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetBooleanParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetBooleanParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetBooleanParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetBooleanParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetFloatingParameter" id="simxSetFloatingParameter"></a>simxSetFloatingParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetFloatingParameter">simSetFloatingParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetFloatingParameter">simRosSetFloatingParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a <a href="apiConstants.htm#floatingParameters">floating point parameter</a>. See also <a href="#simxGetFloatingParameter">simxGetFloatingParameter</a>, <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxSetArrayParameter">simxSetArrayParameter</a> and <a href="#simxSetIntegerParameter">simxSetIntegerParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetFloatingParameter(simxInt paramIdentifier,simxFloat paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#floatingParameters">floating parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetFloatingParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetFloatingParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetFloatingParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetFloatingParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetFloatSignal" id="simxSetFloatSignal"></a>simxSetFloatSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetFloatSignal">simSetFloatSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetFloatSignal">simRosSetFloatSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of a float signal. If that signal is not yet present, it is added. See also <a href="#simxGetFloatSignal">simxGetFloatSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a>, <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a> and <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetFloatSignal(const simxChar* signalName,simxFloat signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetFloatSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetFloatSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetFloatSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetIntegerParameter" id="simxSetIntegerParameter"></a>simxSetIntegerParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetIntegerParameter">simSetIntegerParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetIntegerParameter">simRosSetIntegerParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an <a href="apiConstants.htm#integerParameters">integer parameter</a>. See also <a href="#simxGetIntegerParameter">simxGetIntegerParameter</a>, <a href="#simxSetBooleanParameter">simxSetBooleanParameter</a>, <a href="#simxSetArrayParameter">simxSetArrayParameter</a> and <a href="#simxSetFloatingParameter">simxSetFloatingParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetIntegerParameter(simxInt paramIdentifier,simxInt paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#integerParameters">integer parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetIntegerParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetIntegerParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetIntegerParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetIntegerParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetIntegerSignal" id="simxSetIntegerSignal"></a>simxSetIntegerSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetIntegerSignal">simSetIntegerSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetIntegerSignal">simRosSetIntegerSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of an integer signal. If that signal is not yet present, it is added. See also <a href="#simxGetIntegerSignal">simxGetIntegerSignal</a>, <a href="#simxClearIntegerSignal">simxClearIntegerSignal</a>, <a href="#simxSetFloatSignal">simxSetFloatSignal</a> and <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetIntegerSignal(const simxChar* signalName,simxInt signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetIntegerSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetIntegerSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetIntegerSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetIntegerSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetJointForce" id="simxSetJointForce"></a>simxSetJointForce 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetJointForce">simSetJointForce</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetJointForce">simRosSetJointForce</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the maximum force or torque that a joint can exert. This function has no effect when the joint is not dynamically enabled, or when it is a spherical joint. See also <a href="#simxJointGetForce">simxJointGetForce</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointForce(simxInt jointHandle,simxFloat force,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>force</strong>: the maximum force or torque that the joint can exert
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointForce">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointForce">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetJointForce">Urbi</a></td> 
</tr> 
</table> 
<br>























<h3>
<a name="simxSetJointPosition" id="simxSetJointPosition"></a>simxSetJointPosition 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetJointPosition">simSetJointPosition</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetJointPosition">simRosSetJointPosition</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic position of a joint. May have no effect depending on the joint mode. This function cannot be used with spherical joints (use <a href="#simxSetSphericalJointMatrix">simxSetSphericalJointMatrix</a> instead). If you want to set several joints that should be applied at the exact same time on the V-REP side, then use <a href="#simxPauseCommunication">simxPauseCommunication</a>. See also <a href="#simxGetJointPosition">simxGetJointPosition</a> and <a href="#simxSetJointTargetPosition">simxSetJointTargetPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointPosition(simxInt jointHandle,simxFloat position,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>position</strong>: position of the joint (angular or linear value depending on the joint type)
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointPosition">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetJointPosition">Urbi</a></td> 
</tr> 
</table> 
<br>











<h3>
<a name="simxSetJointTargetPosition" id="simxSetJointTargetPosition"></a>simxSetJointTargetPosition 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetJointTargetPosition">simSetJointTargetPosition</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetJointTargetPosition">simRosSetJointTargetPosition</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the target position of a joint if the joint is in torque/force mode (also make sure that the joint's motor and position control are enabled). See also <a href="#simxSetJointPosition">simxSetJointPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointTargetPosition(simxInt jointHandle,simxFloat targetPosition,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>targetPosition</strong>: target position of the joint (angular or linear value depending on the joint type)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointTargetPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointTargetPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointTargetPosition">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetJointTargetPosition">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetJointTargetVelocity" id="simxSetJointTargetVelocity"></a>simxSetJointTargetVelocity 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetJointTargetVelocity">simSetJointTargetVelocity</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetJointTargetVelocity">simRosSetJointTargetVelocity</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic target velocity of a non-spherical joint. This command makes only sense when the joint mode is: (a) motion mode: the joint's motion handling feature must be enabled (<a href="apiFunctions.htm#simHandleJoint">simHandleJoint</a> must be called (is called by default in the main script), and the joint motion properties must be set in the joint settings dialog), (b) torque/force mode: the dynamics functionality and the joint motor have to be enabled (position control should however be disabled)</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointTargetVelocity(simxInt jointHandle,simxFloat targetVelocity,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>targetVelocity</strong>: target velocity of the joint (linear or angular velocity depending on the joint-type)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointTargetVelocity">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointTargetVelocity">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointTargetVelocity">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetJointTargetVelocity">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetModelProperty" id="simxSetModelProperty"></a>simxSetModelProperty 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetModelProperty">simSetModelProperty</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetModelProperty">simRosSetModelProperty</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the properties of a model. See also <a href="#simxGetModelProperty">simxGetModelProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetModelProperty(simxInt objectHandle,simxInt prop,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>prop</strong>: a <a href="apiConstants.htm#modelProperties">model property value</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetModelProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetModelProperty">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetModelProperty">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetModelProperty">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetObjectFloatParameter" id="simxSetObjectFloatParameter"></a>simxSetObjectFloatParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetObjectFloatParameter">simSetObjectFloatParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetObjectFloatParameter">simRosSetObjectFloatParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a floating-point parameter of a object. See also <a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a> and <a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectFloatParameter(simxInt objectHandle,simxInt parameterID,simxFloat parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to set. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: the desired value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectFloatParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectFloatParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectFloatParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetObjectFloatParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetObjectIntParameter" id="simxSetObjectIntParameter"></a>simxSetObjectIntParameter 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetObjectIntParameter">simSetObjectIntParameter</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetObjectIntParameter">simRosSetObjectIntParameter</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an integer parameter of a object. See also <a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a> and <a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectIntParameter(simxInt objectHandle,simxInt parameterID,simxInt parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to set. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: the desired value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectIntParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectIntParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectIntParameter">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetObjectIntParameter">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetObjectOrientation" id="simxSetObjectOrientation"></a>simxSetObjectOrientation 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetObjectOrientation">simSetObjectOrientation</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetObjectQuaternion">simRosSetObjectQuaternion</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the orientation (Euler angles) of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling  <a href="apiFunctions.htm#simResetDynamicObject">simResetDynamicObject</a> just before). See also <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a> and <a href="#simxSetObjectPosition">simxSetObjectPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectOrientation(simxInt objectHandle,simxInt relativeToObjectHandle,const simxFloat* eulerAngles,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the orientation is specified. Specify -1 to set the absolute orientation, sim_handle_parent to set the orientation relative to the object's parent, or an object handle relative to whose reference frame the orientation is specified.</div>
<div><strong>eulerAngles</strong>: Euler angles (alpha, beta and gamma)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectOrientation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectOrientation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectOrientation">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetObjectOrientation">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetObjectParent" id="simxSetObjectParent"></a>simxSetObjectParent 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetObjectParent">simSetObjectParent</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetObjectParent">simRosSetObjectParent</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an object's parent object. See also <a href="#simxGetObjectParent">simxGetObjectParent</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectParent(simxInt objectHandle,simxInt parentObject,simxChar keepInPlace,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object that will become child of the parent object</div>
<div><strong>parentObject</strong>: handle of the object that will become parent, or -1 if the object should become parentless</div>
<div><strong>keepInPlace</strong>: indicates whether the object's absolute position and orientation should stay same</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot or simx_opmode_oneshot_wait depending on the intent
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectParent">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectParent">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectParent">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetObjectParent">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetObjectPosition" id="simxSetObjectPosition"></a>simxSetObjectPosition 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetObjectPosition">simSetObjectPosition</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetObjectPosition">simRosSetObjectPosition</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the position of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling  <a href="apiFunctions.htm#simResetDynamicObject">simResetDynamicObject</a> just before). See also <a href="#simxGetObjectPosition">simxGetObjectPosition</a> and <a href="#simxSetObjectOrientation">simxSetObjectOrientation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectPosition(simxInt objectHandle,simxInt relativeToObjectHandle,const simxFloat* position,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the position is specified. Specify -1 to set the absolute position, sim_handle_parent to set the position relative to the object's parent, or an object handle relative to whose reference frame the position is specified.</div>
<div><strong>position</strong>: the position values (x, y and z)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectPosition">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetObjectPosition">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxSetObjectSelection" id="simxSetObjectSelection"></a>simxSetObjectSelection (ROS service equivalent: <a href="rosServices.htm#simRosSetObjectSelection">simRosSetObjectSelection</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the selection state for objects. See also <a href="#simxGetObjectSelection">simxGetObjectSelection</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectSelection(const simxInt* objectHandles,simxInt objectCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>objectHandles</strong>: an array of object handles</div>
<div><strong>objectCount</strong>: the number of elements in the array</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot or simx_opmode_oneshot_wait depending on the intent.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectSelection">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectSelection">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectSelection">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetObjectSelection">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetSphericalJointMatrix" id="simxSetSphericalJointMatrix"></a>simxSetSphericalJointMatrix 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetSphericalJointMatrix">simSetSphericalJointMatrix</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetSphericalJointMatrix">simRosSetSphericalJointMatrix</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic orientation matrix of a spherical joint object. This function cannot be used with non-spherical joints (use <a href="#simxSetJointPosition">simxSetJointPosition</a> instead). See also <a href="#simxGetJointMatrix">simxGetJointMatrix</a>..</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetSphericalJointMatrix(simxInt jointHandle,simxFloat* matrix,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>matrix</strong>: pointer to 12 simxFloat values. See the regular API equivalent function for details</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetSphericalJointMatrix">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetSphericalJointMatrix">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetSphericalJointMatrix">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetSphericalJointMatrix">Urbi</a></td> 
</tr> 
</table> 
<br>











<h3>
<a name="simxSetStringSignal" id="simxSetStringSignal"></a>simxSetStringSignal 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetStringSignal">simSetStringSignal</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetStringSignal">simRosSetStringSignal</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of a string signal. If that signal is not yet present, it is added. See also <a href="#simxGetStringSignal">simxGetStringSignal</a>, <a href="#simxClearStringSignal">simxClearStringSignal</a>, <a href="#simxSetIntegerSignal">simxSetIntegerSignal</a> and <a href="#simxSetFloatSignal">simxSetFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetStringSignal(const simxChar* signalName,const simxChar* signalValue,simxInt signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal (which may contain any value, including embedded zeros)</div>
<div><strong>signalLength</strong>: size of the signalValue string</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetStringSignal">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetStringSignal">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetUIButtonLabel" id="simxSetUIButtonLabel"></a>simxSetUIButtonLabel 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetUIButtonLabel">simSetUIButtonLabel</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetUIButtonLabel">simRosSetUIButtonLabel</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the up-state and down-state labels of a custom user interface button.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetUIButtonLabel(simxInt uiHandle,simxInt uiButtonID,const simxChar* upStateLabel,const simxChar* downStateLabel,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiHandle</strong>: handle of the custom user interface</div>
<div><strong>uiButtonID</strong>: handle (or ID) of the custom user interface button</div>
<div><strong>upStateLabel</strong>: pointer to a string containing the label of the button when it is up. Cannot be NULL.</div>
<div><strong>downStateLabel</strong>: pointer to a string containing the label of the button when it is down. Cannot be NULL.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetUIButtonLabel">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetUIButtonLabel">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetUIButtonLabel">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetUIButtonLabel">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetUIButtonProperty" id="simxSetUIButtonProperty"></a>simxSetUIButtonProperty 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetUIButtonProperty">simSetUIButtonProperty</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetUIButtonProperty">simRosSetUIButtonProperty</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the properties of a custom user interface button. See also <a href="#simxGetUIButtonProperty">simxGetUIButtonProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetUIButtonProperty(simxInt uiHandle,simxInt uiButtonID,simxInt prop,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiHandle</strong>: handle of the custom user interface</div>
<div><strong>uiButtonID</strong>: handle (or ID) of the custom user interface button</div>
<div><strong>prop</strong>: a <a href="apiConstants.htm#uiButtonProperties">button property value</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetUIButtonProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetUIButtonProperty">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetUIButtonProperty">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetUIButtonProperty">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetUISlider" id="simxSetUISlider"></a>simxSetUISlider 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetUISlider">simSetUISlider</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetUISlider">simRosSetUISlider</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the slider position of a custom user interface button (must be a slider-type button). See also <a href="#simxGetUISlider">simxGetUISlider</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetUISlider(simxInt uiHandle,simxInt uiButtonID,simxInt position,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>uiHandle</strong>: handle of the custom user interface</div>
<div><strong>uiButtonID</strong>: id of the button (slider) in the custom user interface</div>
<div><strong>position</strong>: slider position. valid values are between 0 and 1000</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetUISlider">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetUISlider">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetUISlider">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetUISlider">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxSetVisionSensorImage" id="simxSetVisionSensorImage"></a>simxSetVisionSensorImage 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simSetVisionSensorImage">simSetVisionSensorImage</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosSetVisionSensorImage">simRosSetVisionSensorImage</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the image of a vision sensor (and applies any image processing filter if specified in the vision sensor dialog). Make sure the vision sensor is flagged as <strong>use external image</strong>. The &quot;regular&quot; use of this function is to first read the data from a vision sensor with <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>, do some custom filtering, then write the modified image to a passive vision sensor. The alternate use of this function is to display textures, video images, etc. by using a vision sensor object (without however making use of the vision sensor functionality), since a vision sensor can be &quot;looked through&quot; like camera objects.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetVisionSensorImage(simxInt sensorHandle,simxChar* image,simxInt bufferSize,simxChar options,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>image</strong>: pointer tothe image data</div>
<div><strong>bufferSize</strong>: size of the image data</div>
<div><strong>options</strong>: image options, bit-coded:</div>
<div class=tab>bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_split+4000
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetVisionSensorImage">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSetVisionSensorImage">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxStart" id="simxStart"></a>simxStart</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Starts the communication thread. This should be the very first remote API function called on the client side. Make sure to start an appropriate remote API server service on the server side, that will wait for a connection. See also <a href="#simxFinish">simxFinish</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxStart(const simxChar* connectionAddress,simxInt connectionPort,simxChar waitUntilConnected,simxChar doNotReconnectOnceDisconnected,simxInt timeOutInMs)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>connectionAddress</strong>: the ip address where the server is located (i.e. V-REP)</div>
<div><strong>connectionPort</strong>: the port number where to connect</div>
<div><strong>waitUntilConnected</strong>: if different from 0, the function returns only once connected (or if a timeout was reached)</div>
<div><strong>doNotReconnectOnceDisconnected</strong>: if different from zero, then the communication thread will not attempt a second connection if a connection was lost.</div>
<div><strong>timeOutInMs</strong>: connection time-out in milliseconds (for the first connection).</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a connection ID, or -1 if the client could not connect to the server (i.e. a timeout was reached). The return value is always 0 if <strong>waitUntilConnected</strong> is 0. A call to simxStart should always be followed at the end with a call to <a href="#simxFinish">simxFinish</a> if simxStart didn't return -1</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxStart">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStart">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxStart">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxStart">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxStartSimulation" id="simxStartSimulation"></a>simxStartSimulation 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simStartSimulation">simStartSimulation</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosStartSimulation">simRosStartSimulation</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a start of a simulation (or a resume of a paused simulation). This function is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxPauseSimulation">simxPauseSimulation</a> and <a href="#simxStopSimulation">simxStopSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxStartSimulation(simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxStartSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStartSimulation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxStartSimulation">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxStartSimulation">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3>
<a name="simxStopSimulation" id="simxStopSimulation"></a>simxStopSimulation 
<div class=tab>regular API equivalent: <a href="apiFunctions.htm#simStopSimulation">simStopSimulation</a></div>
<div class=tab>ROS service equivalent: <a href="rosServices.htm#simRosStopSimulation">simRosStopSimulation</a></div>
</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a stop of the running simulation. See also <a href="#simxStartSimulation">simxStartSimulation</a> and <a href="#simxPauseSimulation">simxPauseSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxStopSimulation(simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxStopSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStopSimulation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxStopSimulation">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxStopSimulation">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxSynchronous" id="simxSynchronous"></a>simxSynchronous (ROS service equivalent: <a href="rosServices.htm#simRosSynchronous">simRosSynchronous</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Enables or disables the synchronous operation mode for the remote API server service that the client is connected to. The function is blocking. While in synchronous operation mode, the client application is in charge of triggering the next simulation step. Only pre-enabled remote API server services will successfully execute this function, and only one server service at a time can have the synchronous operation enabled. This function should only be called when simulation is not running and is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxSynchronousTrigger">simxSynchronousTrigger</a> and the <a href="remoteApiOverview.htm">remote API overview</a> . This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSynchronous(simxChar enable)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>enable</strong>: the enable state of the synchronous operation</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSynchronous">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSynchronous">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSynchronous">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSynchronous">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxSynchronousTrigger" id="simxSynchronousTrigger"></a>simxSynchronousTrigger (ROS service equivalent: <a href="rosServices.htm#simRosSynchronousTrigger">simRosSynchronousTrigger</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sends a synchronization  trigger signal to the server. The function is blocking. The server needs to be previously enabled for synchronous operation via the <a href="#simxSynchronous">simxSynchronous</a> function. The trigger signal will inform V-REP to execute the next simulation step (i.e. to call <a href="apiFunctions.htm#simHandleMainScript">simHandleMainScript</a>). While in synchronous operation mode, the client application is in charge of triggering the next simulation step, otherwise simulation will stall. See also the <a href="remoteApiOverview.htm">remote API overview</a>. This function is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSynchronousTrigger()</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div>none</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSynchronousTrigger">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSynchronousTrigger">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSynchronousTrigger">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxSynchronousTrigger">Urbi</a></td> 
</tr> 
</table> 
<br>













<h3><a name="simxTransferFile" id="simxTransferFile"></a>simxTransferFile (ROS service equivalent: <a href="rosServices.htm#simRosTransferFile">simRosTransferFile</a>)</h3>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows transferring a file from the client to the server. This function is used by several other functions internally (e.g. <a href="#simxLoadModel">simxLoadModel</a>). See also <a href="#simxEraseFile">simxEraseFile</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxTransferFile(const simxChar* filePathAndName,const simxChar* fileName_serverSide,simxInt timeOut,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>filePathAndName</strong>: the local file name and path (i.e. on the client side)</div>
<div><strong>fileName_serverSide</strong>: a file name under which the transferred file will be saved on the server side. For now, do not specify a path (the file will be saved in the remote API plugin directory)</div>
<div><strong>timeOut</strong>: a timeout value in milliseconds</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot_wait
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function error code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxTransferFile">Python</a>, <a href="remoteApiFunctionsJava.htm#simxTransferFile">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxTransferFile">Matlab</a>, <a href="remoteApiFunctionsUrbi.htm#simxTransferFile">Urbi</a></td> 
</tr> 
</table> 
<br>


















<br>
<br>
</td>
</tr>
</table> 
</div>  
  
  
</body>

</html>
